<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DaggerfallConnect</name>
    </assembly>
    <members>
        <member name="T:DaggerfallConnect.FileUsage">
            <summary>
            File usage enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.FileUsage.Undefined">
            <summary>Usage is not defined and will default to UseDisk if not specifed.</summary>
        </member>
        <member name="F:DaggerfallConnect.FileUsage.UseMemory">
            <summary>File is loaded and stored in a read-write memory buffer.</summary>
        </member>
        <member name="F:DaggerfallConnect.FileUsage.UseDisk">
            <summary>File is opened as read-only from disk.</summary>
        </member>
        <member name="T:DaggerfallConnect.Utility.FileProxy">
            <summary>
            This class abstracts a disk file or memory buffer to an object that can be emitted and read using binary streams.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Utility.FileProxy.FileUsage">
            <summary>
            Determines if file is read from disk (read-only file stream) or memory buffer (read-write memory stream).
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Utility.FileProxy.IsReadOnly">
            <summary>
            Has file been opened as read only or read-write.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Utility.FileProxy.FileStream">
            <summary>
            Stream to file when using FileUsage.UseDisk.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Utility.FileProxy.FileBuffer">
            <summary>
            Byte array when using FileUsage.UseMemory.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Utility.FileProxy.ManagedFilePath">
            <summary>
            Full path of managed file regardless of usage.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Utility.FileProxy.MyLastException">
            <summary>
            Last exception thrown.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.#ctor(System.Byte[],System.String)">
            <summary>
            Assign byte array constructor.
            </summary>
            <param name="Data">Byte array to assign (usage will be set to FileUsage.useMemory).</param>
            <param name="Name">Name, filename, or path  to describe memory buffer.</param>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load a file.
            </summary>
            <param name="FilePath">Absolute path to file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.Close">
            <summary>
            Close open file and free memory used for buffer.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.GetReader">
            <summary>
            Gets a binary reader to managed file.
            </summary>
            <returns>BinaryReader to managed file with UTF8 encoding.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.GetReader(System.Int64)">
            <summary>
            Get a binary reader to managed file starting at the specified position.
            </summary>
            <param name="Position">Position to start in stream (number of bytes from start of file).</param>
            <returns>BinaryReader to managed file with UTF8 encoding and set to specified position.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.GetWriter">
            <summary>
            Gets a binary writer to managed file.
            </summary>
            <returns>BinaryReader to managed file with UTF8 encoding.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.GetWriter(System.Int64)">
            <summary>
            Get a binary writer to managed file starting at the specified position.
            </summary>
            <param name="Position">Position to start in stream (number of bytes from start of file).</param>
            <returns>BinaryReader to managed file with UTF8 encoding and set to specified position.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.ReadCString(System.Int32,System.Int32)">
            <summary>
            Reads a UTF8 string of bytes from the managed file.
            </summary>
            <param name="Position">Position to start reading in file (number of bytes from start of file).</param>
            <param name="ReadLength">Number of bytes to read (length=0 for null-terminated.)</param>
            <returns>String composed from bytes read (all NULLs are discarded).</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.ReadCString(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads a UTF8 string of length bytes from the binary reader.
            </summary>
            <param name="Reader">Source reader.</param>
            <param name="ReadLength">Number of bytes to read (length=0 for null-terminated).</param>
            <returns>String composed from bytes read (all NULLs are discarded).</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.ReadCStringSkip(System.IO.BinaryReader,System.Int32,System.Int32)">
            <summary>
            Reads a UTF8 string of ReadLength bytes from the binary reader, then sets reader position to start + SkipLength.
             This handles a special case where a character buffer may be null-terminated, but still be of a fixed length.
             The remaining chars after the null may be filled with garbage. This method will read the
             specified number of characters, then skip to Reader.BaseStream.Position + SkipLength.
             When ReadLength=0, the string will be truncated at SkipLength if no null is found.
            </summary>
            <param name="Reader">Source reader.</param>
            <param name="ReadLength">Number of bytes to read (length=0 for null-terminated).</param>
            <param name="SkipLength">Number of bytes to skip from start position after read.</param>
            <returns>String composed from bytes read (all NULLs are discarded).</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.beReadInt16(System.IO.BinaryReader)">
            <summary>
            Reads next 2 bytes as a big-endian Int16.
            </summary>
            <param name="Reader">Source reader.</param>
            <returns>Big-endian Int16</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.beReadUInt16(System.IO.BinaryReader)">
            <summary>
            Reads next 2 bytes as a big-endian UInt16.
            </summary>
            <param name="Reader">Source reader.</param>
            <returns>Big-endian UInt16.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.beReadInt32(System.IO.BinaryReader)">
            <summary>
            Reads next 4 bytes as a big-endian Int32.
            </summary>
            <param name="Reader">Source reader.</param>
            <returns>Big-endian Int32.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.beReadUInt32(System.IO.BinaryReader)">
            <summary>
            Reads next 4 bytes as a big-endian UInt32.
            </summary>
            <param name="Reader">Source reader.</param>
            <returns>Big-endian Int32.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.endianSwapUInt16(System.UInt16)">
            <summary>
            Swaps an unsigned 16-bit big-endian value to little-endian.
            </summary>
            <param name="Value">Source reader.</param>
            <returns>Little-endian UInt16.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.endianSwapUInt32(System.UInt32)">
            <summary>
            Swaps an unsigned 32-bit big-endian value to little-endian.
            </summary>
            <param name="Value">Source reader.</param>
            <returns>Little-endian UInt32.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.GetFileStream">
            <summary>
            Gets stream to disk file.
            </summary>
            <returns>FileStream object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.GetMemoryStream">
            <summary>
            Gets stream to memory file.
            </summary>
            <returns>FileStream object</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.LoadMemory(System.String,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Loads a file into memory.
            </summary>
            <param name="FilePath">Absolute path of file to load.</param>
            <param name="FileAccess">Defines access to file.</param>
            <param name="FileShare">Defines shared access to file.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Utility.FileProxy.LoadDisk(System.String,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file from disk.
            </summary>
            <param name="FilePath">Absolute path of file to load.</param>
            <param name="FileAccess">Defines access to file.</param>
            <param name="FileShare">Defines shared access to file.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.Length">
            <summary>
            Length of managed file in bytes.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.FilePath">
            <summary>
            Get full path and filename of managed file. Derived from filename for disk files, or specified at construction for managed files.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.FileName">
            <summary>
            Get filename of managed file without path.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.Directory">
            <summary>
            Get directory path of managed file without filename.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.Usage">
            <summary>
            Get the file usage in effect for this managed file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.ReadOnly">
            <summary>
            Access allowed to file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.LastException">
            <summary>
            Gets last exception thrown.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Utility.FileProxy.Buffer">
            <summary>
            Gets byte array when using FileUsage.UseMemory.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.CifRciFile">
            <summary>
            Connects to a *.CIF or *.RCI file to enumerate and extract image data.
             Each CIF file may contain one or more images, including animated records with multiple frames.
             Each RCI file may contain one or more images, but never animated records.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFImageFile">
            <summary>
            Provides base image handling for all Daggerfall image files.
             This class is inherited from and extended by Arena2.TextureFile, Arena2.ImgFile, etc.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFImageFile.MyPalette">
            <summary>
            Palette for building image data
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFImageFile.ManagedFile">
            <summary>
            Managed file.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Loads an image file.
            </summary>
            <param name="FilePath">Absolute path to file</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the file. As many images as possible will be laid out onto the preview surface.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetFrameCount(System.Int32)">
            <summary>
            Gets number of frames in specified record.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Number of frames.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetSize(System.Int32)">
            <summary>
            Gets width and height of specified record. All frames of this record are the same dimensions.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetDFBitmap(System.Int32,System.Int32)">
            <summary>
            Gets bitmap data as indexed 8-bit byte array for specified record and frame.
            </summary>
            <param name="Record">Index of record.</param>
            <param name="Frame">Index of frame.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetManagedBitmap(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap from specified record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make colour 0x000000 transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.LoadPalette(System.String)">
            <summary>
            Loads a Daggerfall palette that will be used for building images.
            </summary>
            <param name="FilePath">Absolute path to Daggerfall palette.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetBitmapFormat(System.Int32,System.Int32,System.Byte,DaggerfallConnect.DFBitmap.Formats)">
            <summary>
            Get raw bytes for specified record and frame using a custom pixel format.
            </summary>
            <param name="Record">Index of record.</param>
            <param name="Frame">Index of frame.</param>
            <param name="AlphaIndex">Index of alpha colour.</param>
            <param name="Format">Specified pixel format to use.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.GetManagedBitmap(DaggerfallConnect.DFBitmap@,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap from specified indexed image buffer.
             The currently loaded palette will be used for index to RGB matching.
            </summary>
            <param name="DFBitmap">Object containing source indexed bitmap data.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make image transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFImageFile.ReadImgFileHeader(System.IO.BinaryReader@,DaggerfallConnect.DFImageFile.ImgFileHeader@)">
            <summary>
            Reads a standard IMG file header from the source stream into the desination header struct.
             This header is found in multiple image files which is why it's implemented here in the base.
            </summary>
            <param name="Reader">Source reader positioned at start of header data.</param>
            <param name="Header">Destination header structure.</param>
        </member>
        <member name="P:DaggerfallConnect.DFImageFile.FilePath">
            <summary>
            Gets full path of managed file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFImageFile.FileName">
            <summary>
            Gets file name only of managed file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFImageFile.Palette">
            <summary>
            Gets or sets palette for building images.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFImageFile.RecordCount">
            <summary>
            Gets total number of records in this file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFImageFile.Description">
            <summary>
            Gets description of this file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFImageFile.PaletteName">
            <summary>
            Gets correct palette name for this file.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFImageFile.CompressionFormats">
            <summary>
            Compression formats enumeration. This is shared as internal as most image formats use some kind of compression.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFImageFile.ImgFileHeader">
            <summary>
            IMG File header. This is shared as internal as the IMG structure is also used in CIF files.
             The CifFile class will use this file header while reading most records.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.CifRciFile.Records">
            <summary>
            Record array. This is pre-sized to 64 objects as CIF files do not contain a master header and
             it's necessary to read through the file to count the number of image records.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.CifRciFile.TotalRecords">
            <summary>
            Total number of records in this file. Any records past this count in Records array are not valid.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to *.CIF or *.RCI file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.#ctor(System.String,DaggerfallConnect.FileUsage,DaggerfallConnect.DFPalette,System.Boolean)">
            <summary>
            Load constructor with palette assignment.
            </summary>
            <param name="FilePath">Absolute path to *.CIF or *.RCI file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="Palette">Palette to use when building images.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.String,System.Boolean)">
            <summary>
            Load constructor that also loads a palette.
            </summary>
            <param name="FilePath">Absolute path to *.CIF or *.RCI file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="PaletteFilePath">Absolute path to Daggerfall palette file.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Loads a CIF or RCI file.
            </summary>
            <param name="FilePath">Absolute path to *.CIF or *.RCI file</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.GetFrameCount(System.Int32)">
            <summary>
            Gets number of frames in specified record.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Number of frames.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.GetSize(System.Int32)">
            <summary>
            Gets width and height of specified record. All frames of this record are the same dimensions.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.GetDFBitmap(System.Int32,System.Int32)">
            <summary>
            Gets bitmap data as indexed 8-bit byte array for specified record and frame.
            </summary>
            <param name="Record">Index of record.</param>
            <param name="Frame">Index of frame.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.GetManagedBitmap(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap from specified record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make colour 0x000000 transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the file. As many images as possible will be laid out onto the preview surface.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.Read">
            <summary>
            Read file.
            </summary>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadRecords(System.IO.BinaryReader@)">
            <summary>
            Reads records and formats Records array.
            </summary>
            <param name="Reader">Source reader.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadRci(System.IO.BinaryReader@,System.String)">
            <summary>
            Special handling for RCI files.
            </summary>
            <param name="Reader">Source reader.</param>
            <param name="Filename">Name of this file without path.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadWeaponCif(System.IO.BinaryReader@,System.String)">
            <summary>
            Special handling for WEAPON CIF files.
            </summary>
            <param name="Reader">Source reader.</param>
            <param name="Filename">Name of this file without path.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadImageData(System.Int32,System.Int32)">
            <summary>
            Reads image data for specified record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadImage(System.Int32,System.Int32)">
            <summary>
            Read uncompressed record.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadWeaponImage(System.Int32,System.Int32)">
            <summary>
            Reads image data for specified weapon-type record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadRleImage(System.Int32,System.Int32)">
            <summary>
            Read a RLE record.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.CifRciFile.ReadRleData(System.IO.BinaryReader@,System.Int32,System.IO.BinaryWriter@)">
            <summary>
            Reads RLE compressed data from source reader to destination writer.
            </summary>
            <param name="Reader">Source reader positioned at start of input data.</param>
            <param name="Length">Length of source data.</param>
            <param name="Writer">Destination writer positioned at start of output data.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="P:DaggerfallConnect.Arena2.CifRciFile.PaletteName">
            <summary>
            Return correct palette name for this file (always ART_PAL.COL for CIF and RCI files).
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.CifRciFile.RecordCount">
            <summary>
            Number of image records in this Cif or Rci file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.CifRciFile.Description">
            <summary>
            Description of this file.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.CifRciFile.RecordType">
            <summary>
            Types of records found in this file.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.CifRciFile.Record">
            <summary>
            Record data.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.CifRciFile.AnimationHeader">
            <summary>
            Animation header for weapon files.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.LibraryTypes">
            <summary>
            Image library types enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryTypes.None">
            <summary>No library.</summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryTypes.Texture">
            <summary>Texture files.</summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryTypes.Img">
            <summary>Img Files.</summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryTypes.Cif">
            <summary>Cif Files.</summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryTypes.Rci">
            <summary>Rci Files.</summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryTypes.Sky">
            <summary>Sky Files.</summary>
        </member>
        <member name="T:DaggerfallConnect.LibraryEnumerator">
            <summary>
            IEnumerator for library files.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryEnumerator._ImageFileReader">
            <summary>Reference to the image file reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.LibraryEnumerator.Index">
            <summary>Index of current enumerator position.</summary>
        </member>
        <member name="M:DaggerfallConnect.LibraryEnumerator.#ctor(DaggerfallConnect.ImageFileReader)">
            <summary>
            Default constructor.
            </summary>
            <param name="ImageFileReader">An instantiated ImageFileReader object with library type set.</param>
        </member>
        <member name="M:DaggerfallConnect.LibraryEnumerator.Reset">
            <summary>
            Resets index to start.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.ImageFileReader">
            <summary>
            A class for enumerating and reading all Daggerfall image files in a uniform manner.
             Provides caching and hashing to store and retrieve file data after being loaded.
             Known unsupported/invalid files will be filtered out automatically.
             Handles loading correct palette for each file.
             Manual enumerators (GetFirstFile, GetNextFile, etc.) are separate to IEnumerator. Usage can be mixed without any problems.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.MyArena2Path">
            <summary>Current Arena2 path.</summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.MyFileUsage">
            <summary>File usage behaviour for all image files.</summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.MyLibraryType">
            <summary>Current library used for simple enumeration methods.</summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.MyFileIndex">
            <summary>Index of current file for simple enumeration methods.</summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.LastOpenLibraryType">
            <summary>Last open library type for auto-discard logic.</summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.LastOpenFileIndex">
            <summary>Last open file index for auto-discard logic.</summary>
        </member>
        <member name="F:DaggerfallConnect.ImageFileReader.AutoDiscardValue">
            <summary>Auto-discard behaviour enabled or disabled.</summary>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.#ctor(System.String)">
            <summary>
            Constructor that specifies Arena2 path for image file operations.
            </summary>
            <param name="Arena2Path">Absolute path to Arena2 folder.</param>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.LoadCurrentFile">
            <summary>
            Loads file at the current enumerator position.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.LoadFile(System.String)">
            <summary>
            Loads the specified filename and relocates enumerator position.
             If file is not part of the current library, ImageFileReader will change to the appropriate library.
            </summary>
            <param name="FileName">Name of file.</param>
            <returns>DFImageFile object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the current file. As many images as possible will be laid out onto the preview surface.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetImageFile(System.String)">
            <summary>
            Gets named image file object from the current library. Does not change enumerator position.
            </summary>
            <param name="FileName">Name of file.</param>
            <returns>DFImageFile object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetImageFile(System.Int32)">
            <summary>
            Gets image file object by index, which must be within range (less than FileCount).
            </summary>
            <param name="Index">Index of file.</param>
            <returns>DFImageFile object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.DiscardAll">
            <summary>
            Discards all cached image data.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetEnumerator">
            <summary>
            Gets IEnumerator for the current library type.
            </summary>
            <returns>IEnumerator object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetClimateTextureFileName(DaggerfallConnect.DFLocation.ClimateBaseType,DaggerfallConnect.DFLocation.ClimateTextureSet,DaggerfallConnect.DFLocation.ClimateWeather)">
            <summary>
            Gets filename of texture archive for climate texture set.
            </summary>
            <param name="Climate">Climate type.</param>
            <param name="Set">Texture set type.</param>
            <param name="Weather">Weather type.</param>
            <returns>Filename of texture archive.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.SetArena2Path(System.String)">
            <summary>
            Set new Arena2 path.
            </summary>
            <param name="Arena2Path">Absolute path to Arena2 folder.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.IndexLibraryFiles">
            <summary>
            Index all image files of current library type.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.IndexLibrary(System.String[]@,DaggerfallConnect.LibraryTypes)">
            <summary>
            Index all files of specified library type.
            </summary>
            <param name="FilePaths">Array of absolute paths to files.</param>
            <param name="Type">Library type.</param>
            <returns></returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.LoadFile(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Loads file by index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileDescription(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Gets description of file by index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <returns>File description.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileRecordCount(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Gets record count of file by index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <returns>File record count.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileFrameCount(DaggerfallConnect.LibraryTypes,System.Int32,System.Int32)">
            <summary>
            Gets frame count of record by file index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <param name="Record">Record to obtain framecount from.</param>
            <returns>File record count.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.DiscardFile(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Discard a file object so it will be garbage collected.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file to discard.</param>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.DiscardLastFile">
            <summary>
            Discard last open file based on auto-discard property.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetImageFile(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Gets image file object of index from specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <returns>DFImageFile object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.CreateFileList(DaggerfallConnect.LibraryTypes)">
            <summary>
            Create new file item lists and hashtables. Old lists and hashtables will be garbage collected.
            </summary>
            <param name="Type">Library type.</param> 
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileItem(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Gets file item by index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <returns>ImageFileItem object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.SetFileItem(DaggerfallConnect.LibraryTypes,System.Int32,DaggerfallConnect.ImageFileReader.ImageFileItem)">
            <summary>
            Sets file item by index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <param name="Item">ImageFileItem to store.</param>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.CreateFile(DaggerfallConnect.LibraryTypes)">
            <summary>
            Creates a new file resource by library type.
            </summary>
            <param name="Type">Library type.</param>
            <returns>DFImageFile object.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFirstFileName">
            <summary>
            Gets first filename of current library. Sets file index to start.
            </summary>
            <returns>First filename in list.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetLastFileName">
            <summary>
            Gets last filename of current library. Sets file index to end.
            </summary>
            <returns>Last filename in list.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetNextFileName">
            <summary>
            Gets next filename of current library. Increments file index.
            </summary>
            <returns>Next filename in list.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetPreviousFileName">
            <summary>
            Gets previous filename of current library. Decrements file index.
            </summary>
            <returns>Previous filename in list.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileCount(DaggerfallConnect.LibraryTypes)">
            <summary>
            Gets number of files in specified library.
            </summary>
            <param name="Type">Library type.</param>
            <returns>File count.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileName(DaggerfallConnect.LibraryTypes,System.Int32)">
            <summary>
            Gets absolute path to file by index within specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="Index">Index of file.</param>
            <returns>Name of file.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileNames(DaggerfallConnect.LibraryTypes)">
            <summary>
            Gets array of file names for specified library.
            </summary>
            <param name="Type">Library type.</param>
            <returns>Array of filenames.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.GetFileIndex(DaggerfallConnect.LibraryTypes,System.String)">
            <summary>
            Gets index of file in specified library.
            </summary>
            <param name="Type">Library type.</param>
            <param name="FileName">Name of file.</param>
            <returns>Index of file.</returns>
        </member>
        <member name="M:DaggerfallConnect.ImageFileReader.ParseLibraryType(System.String)">
            <summary>
            Determines library type from file name.
            </summary>
            <param name="FileName">Name of file.</param>
            <returns>Library type of this file.</returns>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.Arena2Path">
            <summary>
            Gets or sets the Arena2 path containing Daggerfall's image file collection.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.Usage">
            <summary>
            Gets or sets file usage behaviour for loading files. Defaults to FileUsage.UseMemory.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.AutoDiscard">
            <summary>
            Gets or sets auto-discard behaviour for open files. If true old file data will be garbage collected.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.LibraryType">
            <summary>
            Gets or sets the library type to enumerate. Sets enumerator to start of list in specified library.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.FirstFileName">
            <summary>
            Gets first filename of current library type and sets enumerator to start of list.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.LastFileName">
            <summary>
            Gets last filename of current library and sets enumerator to end of list.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.NextFileName">
            <summary>
            Gets next filename and increments enumerator posiiton.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.PreviousFileName">
            <summary>
            Gets previous filename and decrements enumerator position.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.FileName">
            <summary>
            Gets or sets current filename and relocates enumerator position.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.Description">
            <summary>
            Gets description of current file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.FileCount">
            <summary>
            Gets number of files in current library.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.FileNames">
            <summary>
            Gets all file names in current library.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.RecordCount">
            <summary>
            Gets number of image records in current file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.ImageFileReader.ImageFile">
            <summary>
            Gets current image file. Does not change enumerator position.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.ImageFileReader.ImageFileItem">
            <summary>
            Collates image file information.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFPalette">
            <summary>
            Describes a 256-colour Daggerfall palette. Supports loading .PAL and .COL files.
             Palette is initialised to all 0xff0000 (red) to make it obvious when palette isn't loaded.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFPalette.HeaderLength">
            <summary>
            Length of header in bytes for supporting .COL files.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFPalette.PaletteBuffer">
            <summary>
            Array of 256x RGB values. Includes 8-byte header for supporting .COL files.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.#ctor">
            <summary>
            Default constructor. Palette is initialised with red.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.#ctor(System.String)">
            <summary>
            Load constructor (supports both .PAL and .COL files).
            </summary>
            <param name="FilePath">Absolute path to palette file.</param>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.Load(System.String)">
            <summary>
            Loads a Daggerfall palette file (supports both .PAL and .COL files).
            </summary>
            <param name="FilePath">Absolute path to palette file.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.Read(System.IO.BinaryReader@)">
            <summary>
            Read palette information from a binary reader.
             Palette must be a 768-byte PalFile structure (256x 24-bit RGB values).
            </summary>
            <param name="Reader">Source reader positioned at start of palette data.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.Fill(System.Byte,System.Byte,System.Byte)">
            <summary>
            Fills entire palette with specified RGB value.
            </summary>
            <param name="R">Red component.</param>
            <param name="G">Green component.</param>
            <param name="B">Blue component.</param>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.MakeGrayscale">
            <summary>
            Fills entire palette with grayscale values.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.MakeAutomap">
            <summary>
            Fills palette with AutoMap colours. The AutoMap colour index is equal to BuildingTypes value + 1.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.Get(System.Int32)">
            <summary>
            Gets colour at specified index.
            </summary>
            <param name="Index">Index into colour array.</param>
            <returns>Color object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.GetRed(System.Int32)">
            <summary>
            Gets red colour value at index.
            </summary>
            <param name="Index">Index into colour array.</param>
            <returns>Red value byte.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.GetGreen(System.Int32)">
            <summary>
            Gets green colour value at index.
            </summary>
            <param name="Index">Index into colour array.</param>
            <returns>Green value byte.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.GetBlue(System.Int32)">
            <summary>
            Gets blue colour value at index.
            </summary>
            <param name="Index">Index into colour array.</param>
            <returns>Blue value byte.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.Set(System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets index to specified RGB values.
            </summary>
            <param name="Index">Index into colour array.</param>
            <param name="R">Red component.</param>
            <param name="G">Green component.</param>
            <param name="B">Blue component.</param>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.Find(System.Byte,System.Byte,System.Byte)">
            <summary>
            Finds index with specified RGB values.
            </summary>
            <param name="R">Red component.</param>
            <param name="G">Green component.</param>
            <param name="B">Blue component.</param>
            <returns>Index of found RGB value.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFPalette.GetManagedColorPalette">
            <summary>
            Gets a managed colour palette.
            </summary>
            <returns>ColorPalette object.</returns>
        </member>
        <member name="T:DaggerfallConnect.Arena2.MapsFile">
            <summary>
            Connects to MAPS.BSA to enumerate locations within a specific region and extract their layouts.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile._RegionNames">
            <summary>
            All region names.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.RmbBlockPrefixes">
            <summary>
            Block file prefixes.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.RmbTempleNumbers">
            <summary>
            Temple number array.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.RmbBlockLetters">
            <summary>
            RMB block letters array.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.RdbBlockLetters">
            <summary>
            RDB block letters array.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.AutoDiscardValue">
            <summary>
            Auto-discard behaviour enabled or disabled.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.LastRegion">
            <summary>
            The last region opened. Used by auto-discard logic.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.BsaFile">
            <summary>
            The BsaFile representing MAPS.BSA.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.Regions">
            <summary>
            Array of decomposed region records.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.ClimatePak">
            <summary>
            Climate PAK file.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.PoliticPak">
            <summary>
            Politic PAK file.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.IsReady">
            <summary>
            Flag set when class is loaded and ready.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to MAPS.BSA.</param>
            <param name="Usage">Determines if the BSA file will read from disk or memory.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetWorldClimateSettings(System.Int32)">
            <summary>
            Gets settings for specified map climate.
            </summary>
            <param name="worldClimate">Climate value from CLIMATE.PAK. Valid range is 223-232.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load MAPS.BSA file.
            </summary>
            <param name="FilePath">Absolute path to MAPS.BSA file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetRegionName(System.Int32)">
            <summary>
            Gets the name of specified region. Does not change the currently loaded region.
            </summary>
            <param name="Region">Index of region.</param>
            <returns>Name of the region.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetRegionIndex(System.String)">
            <summary>
            Gets index of region with specified name. Does not change the currently loaded region.
            </summary>
            <param name="Name">Name of region.</param>
            <returns>Index of found region, or -1 if not found.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.LoadRegion(System.String)">
            <summary>
            Load a region into memory by name and decompose it for use.
            </summary>
            <param name="Name">Name of region.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.LoadRegion(System.Int32)">
            <summary>
            Load a region into memory by index and decompose it for use.
            </summary>
            <param name="Region">Index of region to load.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.DiscardRegion(System.Int32)">
            <summary>
            Discard a region from memory.
            </summary>
            <param name="Region">Index of region to discard.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.DiscardAllRegions">
            <summary>
            Discard all regions.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetRegion(System.Int32)">
            <summary>
            Gets a DFRegion by index.
            </summary>
            <param name="Region">Index of region.</param>
            <returns>DFRegion.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetRegion(System.String)">
            <summary>
            Gets a DFRegion by name.
            </summary>
            <param name="Name">Name of region.</param>
            <returns>DFRegion.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetLocation(System.Int32,System.Int32)">
            <summary>
            Gets a DFLocation representation of a location.
            </summary>
            <param name="Region">Index of region.</param>
            <param name="Location">Index of location.</param>
            <returns>DFLocation.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetLocation(System.String,System.String)">
            <summary>
            Gets DFLocation representation of a location.
            </summary>
            <param name="RegionName">Name of region.</param>
            <param name="LocationName">Name of location.</param>
            <returns>DFLocation.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.GetRmbBlockName(DaggerfallConnect.DFLocation@,System.Int32,System.Int32)">
            <summary>
            Resolve block name for exterior block.
            </summary>
            <param name="dfLocation">DFLocation to resolve block name.</param>
            <param name="X">Block X coordinate.</param>
            <param name="Y">Block Y coordinate.</param>
            <returns>Block name.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadRegion(System.Int32)">
            <summary>
            Read a region.
            </summary>
            <param name="Region">The region index to read.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadLocation(System.Int32,System.Int32,DaggerfallConnect.DFLocation@)">
            <summary>
            Read a location from the currently loaded region.
            </summary>
            <param name="Region">Region index.</param>
            <param name="Location">Location index.</param>
            <param name="dfLocation">DFLocation object to receive data.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadClimatePoliticData(DaggerfallConnect.DFLocation@)">
            <summary>
            Reads information from CLIMATE.PAK and POLITIC.PAK.
            </summary>
            <param name="dfLocation">DFLocation.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadMapNames(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read map names.
            </summary>
            <param name="Reader">A binary reader to data.</param>
            <param name="Region">Destination region index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadMapTable(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read map table.
            </summary>
            <param name="Reader">A binary reader to data.</param>
            <param name="Region">Destination region index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadMapPItem(System.IO.BinaryReader@,System.Int32,System.Int32,DaggerfallConnect.DFLocation@)">
            <summary>
            Reads MapPItem data.
            </summary>
            <param name="Reader">A binary reader to data.</param>
            <param name="Region">Region index.</param>
            <param name="Location">Location Index.</param>
            <param name="dfLocation">Destination DFLocation.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadLocationRecordElement(System.IO.BinaryReader@,System.Int32,DaggerfallConnect.DFLocation.LocationRecordElement@)">
            <summary>
            Read LocationRecordElementData common to both MapPItem and MapDItem
            </summary>
            <param name="Reader">A binary reader to data.</param>
            <param name="Region">Region index.</param>
            <param name="RecordElement">Destination DFLocation.LocationRecordElement.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.MapsFile.ReadMapDItem(System.IO.BinaryReader@,System.Int32,System.Int32,DaggerfallConnect.DFLocation@)">
            <summary>
            Reads MapDItem data.
            </summary>
            <param name="Reader">A binary reader to data.</param>
            <param name="Region">Region index.</param>
            <param name="Location">Location index.</param>
            <param name="dfLocation">Destination DFLocation.</param>
        </member>
        <member name="P:DaggerfallConnect.Arena2.MapsFile.Filename">
            <summary>
            Gets default MAPS.BSA filename.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.MapsFile.AutoDiscard">
            <summary>
            If true then decomposed regions will be destroyed every time a different region is fetched.
             If false then decomposed regions will be maintained until DiscardRegion() or DiscardAllRegions() is called.
             Turning off auto-discard will speed up region retrieval times at the expense of RAM. For best results, disable
             auto-discard and impose your own caching scheme using LoadRecord() and DiscardRecord() based on your application
             needs.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.MapsFile.RegionCount">
            <summary>
            Number of regions in MAPS.BSA.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.MapsFile.RegionNames">
            <summary>
            Gets all region names as string array.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.MapsFile.Ready">
            <summary>
            True when ready to load regions and locations, otherwise false.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.MapsFile.RegionRecord">
            <summary>
            Represents a single region record.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.MapsFile.DungeonOffset">
            <summary>
            Offsets to dungeon records.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.DungeonOffset.Offset">
            <summary>Offset in bytes relative to end of offset list.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.DungeonOffset.IsDungeon">
            <summary>Is TRUE (0x0001) for all elements.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.MapsFile.DungeonOffset.ExteriorLocationId">
            <summary>The exterior location this dungeon is paired with.</summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BsaFile">
            <summary>
            Connects to a Daggerfall BSA file and extracts records as binary data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BsaFile.ManagedFile">
            <summary>
            Abstracts BSA file to a managed disk or memory stream.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BsaFile.Header">
            <summary>
            Contains the BSA file header data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BsaFile.NameRecordDirectory">
            <summary>
            Array for directories where each item has a string for a name.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BsaFile.NumberRecordDirectory">
            <summary>
            Array for directories where each item has a number for a name.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to BSA file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load BSA file.
            </summary>
            <param name="FilePath">Absolute path to BSA file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordIndex(System.String)">
            <summary>
            Finds index of a named record.
            </summary>
            <param name="Name">Name to search for.</param>
            <returns>Index of name, or -1 if not found.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordLength(System.Int32)">
            <summary>
            Gets length of a record in bytes.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Length of records in bytes.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordName(System.Int32)">
            <summary>
            Gets name of a record as a string. This method is valid for BSA files with either a number or name-based directory.
            </summary>
            <param name="Record">Name of record.</param>
            <returns>Name of record as string.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordId(System.Int32)">
            <summary>
            Gets ID of a number record. This method is valid only for BSA files with a number-based directory.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>ID of record.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordBytes(System.Int32)">
            <summary>
            Retrieves a record as a byte array.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Byte array containing record data.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.RewriteRecord(System.Int32,System.Byte[])">
            <summary>
            Save new record data back to BSA file. WARNING: This will modify the BSA file. Ensure you have backups.
             BSA file must have been opened with ReadOnly flag disabled.
            </summary>
            <param name="Record">The record to save back.</param>
            <param name="Buffer">The data to save back. This must be the same length as record data.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordProxy(System.Int32)">
            <summary>
            Retrieves a record as FileProxy object with usage of FileUsage.useMemory.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>FileProxy object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.GetRecordPosition(System.Int32)">
            <summary>
            Get position (offset) of record in BSA file.
            </summary>
            <param name="Record">Index of record</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.Read">
            <summary>
            Read file.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.ReadHeader(System.IO.BinaryReader)">
            <summary>
            Read header data.
            </summary>
            <param name="Reader">Reader to stream.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BsaFile.ReadDirectory(System.IO.BinaryReader)">
            <summary>
            Read directory items.
            </summary>
            <param name="Reader">Reader to stream.</param>
        </member>
        <member name="P:DaggerfallConnect.Arena2.BsaFile.Count">
            <summary>
            Number records in the loaded BSA file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.BsaFile.DirectoryType">
            <summary>
            Type of directory used for this BSA file.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BsaFile.DirectoryTypes">
            <summary>
            Possible directory types enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BsaFile.DirectoryTypes.NameRecord">
            <summary>Each directory entry is a string.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BsaFile.DirectoryTypes.NumberRecord">
            <summary>Each directory entry is an unsigned integer.</summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BsaFile.FileHeader">
            <summary>
            Represents a BSA file header.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BsaFile.NameRecordDescriptor">
            <summary>
            A name record directory descriptor.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BsaFile.NumberRecordDescriptor">
            <summary>
            A number record directory descriptor.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BlocksFile">
            <summary>
            Connects to BLOCKS.BSA to enumerate and extract city and dungeon blocks.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BlocksFile.AutoDiscardValue">
            <summary>
            Auto-discard behaviour enabled or disabled.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BlocksFile.LastBlock">
            <summary>
            The last record opened. Used by auto-discard logic.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BlocksFile.BsaFile">
            <summary>
            The BsaFile representing BLOCKS.BSA.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BlocksFile.Blocks">
            <summary>
            Array of decomposed block records.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.BlocksFile.BlockNameLookup">
            <summary>
            Name to index lookup dictionary.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to BLOCKS.BSA.</param>
            <param name="Usage">Determines if the BSA file will read from disk or memory.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load BLOCKS.BSA file.
            </summary>
            <param name="FilePath">Absolute path to BLOCKS.BSA file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetBlockName(System.Int32)">
            <summary>
            Gets name of specified block. Does not change the currently loaded block.
            </summary>
            <param name="Block">Index of block.</param>
            <returns>Name of the block.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetBlockType(System.Int32)">
            <summary>
            Gets the type of specified block. Does not change the currently loaded block.
            </summary>
            <param name="Block">Index of block.</param>
            <returns>DFBlock.blockTypes object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetRdbType(System.String)">
            <summary>
            Get RDB block type (quest, normal, wet, etc.)
             Does not return RdbTypes.Start as this can only be derived from
             map data.
            </summary>
            <param name="BlockName">Name of RDB block.</param>
            <returns>DFBlock.RdbTypes object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetBlockIndex(System.String)">
            <summary>
            Gets index of block with specified name. Does not change the currently loaded block.
             Uses a dictionary to map name to index so this method will be faster on subsequent calls.
            </summary>
            <param name="Name">Name of block.</param>
            <returns>Index of found block, or -1 if not found.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.LoadBlock(System.Int32)">
            <summary>
            Load a block into memory and decompose it for use.
            </summary>
            <param name="Block">Index of block to load.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.DiscardBlock(System.Int32)">
            <summary>
            Discard a block from memory.
            </summary>
            <param name="Block">Index of block to discard.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.DiscardAllBlocks">
            <summary>
            Discard all block records.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetBlock(System.Int32)">
            <summary>
            Gets a DFBlock representation of a record.
            </summary>
            <param name="Block">Index of block to load.</param>
            <returns>DFBlock object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetBlock(System.String)">
            <summary>
            Gets a DFBlock by name.
            </summary>
            <param name="Name">Name of block.</param>
            <returns>DFBlock object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.GetBlockAutoMap(System.String,System.Boolean)">
            <summary>
            Gets block AutoMap by name.
            </summary>
            <param name="Name">Name of block.</param>
            <param name="RemoveGroundFlats">Filters ground flat "speckles" from the AutoMap.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.CheckName(System.String)">
            <summary>
            Checks block name and substitutes fixed name if possible.
            </summary>
            <param name="Name">Block name.</param>
            <returns>Block name or String.Empty if no fix possible.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.SearchAlternateRMBName(System.String@)">
            <summary>
            Not all RMB block names can be resolved.
             This method attempts to find a suitable match for these cases
             by matching prefix and suffix of failed block name to a 
             valid block name.
            </summary>
            <param name="Name">Name of invalid block.</param>
            <returns>Valid block name with same prefix and suffix, or string.Empty if no match found.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.Read(System.Int32)">
            <summary>
            Read a block record.
            </summary>
            <param name="Block">The block index to read.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadBlock(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Choose to read an RMB, RDB, or RDI block record. Other block types will be discarded.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="Block">Destination block index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbFldHeader(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read the fixed length data (FLD) header of an RMB record
            </summary>
            <param name="Reader">A binary reader to file</param>
            <param name="Block">Destination block index</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbGroundTilesData(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read ground tile data for this block.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="Block">Destination block index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbGroundSceneryData(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read ground scenery data for this block.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="Block">Destination block index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbBlockData(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read RMB block data, i.e. the outside and inside repeating sections.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="Block">Destination block index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbMisc3dObjects(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read miscellaneous block 3D objects.
            </summary>
            <param name="Reader">A binary reader to file</param>
            <param name="Block">Destination block index</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbMiscFlatObjectRecords(System.IO.BinaryReader@,System.Int32)">
            <summary>
            Read miscellaneous block flat objects.
            </summary>
            <param name="Reader">A binary reader to file</param>
            <param name="Block">Destination block index</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbBlockSubRecord(System.IO.BinaryReader@,DaggerfallConnect.DFBlock.RmbBlockData@)">
            <summary>
            Read block subrecords, i.e. the resources embedded in block data.
            </summary>
            <param name="Reader">A binary reader to file</param>
            <param name="BlockData">Destination record index</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbModelRecords(System.IO.BinaryReader@,DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord[]@)">
            <summary>
            Read a 3D object subrecord.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="RecordsOut">Destination object.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRmbFlatObjectRecords(System.IO.BinaryReader@,DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord[]@)">
            <summary>
            Read a flat object subrecord.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="RecordsOut">Destination object.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.BlocksFile.ReadRdiRecord(System.IO.BinaryReader@,System.Int32)">
            <summary>
            RDI data is currently an unknown format of 512 bytes in length.
            </summary>
            <param name="Reader">BinaryReader to start of data.</param>
            <param name="Block">Block index.</param>
        </member>
        <member name="P:DaggerfallConnect.Arena2.BlocksFile.AutoDiscard">
            <summary>
            If true then decomposed block records will be destroyed every time a different block is fetched.
             If false then decomposed block records will be maintained until DiscardRecord() or DiscardAllRecords() is called.
             Turning off auto-discard will speed up block retrieval times at the expense of RAM. For best results, disable
             auto-discard and impose your own caching scheme using LoadBlock() and DiscardBlock() based on your application
             needs.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.BlocksFile.Count">
            <summary>
            Number of BSA records in ARCH3D.BSA.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.BlocksFile.Filename">
            <summary>
            Gets default BLOCKS.BSA filename.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.BlocksFile.BlockRecord">
            <summary>
            Represents a single block record.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.SkyFile">
            <summary>
            Connects to a SKY??.DAT file to enumerate and extract image data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.SkyFile.Palettes">
            <summary>
            Palette array.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.SkyFile.Bitmaps">
            <summary>
            Bitmap array.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to SKY??.DAT file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Loads a SKY file.
            </summary>
            <param name="FilePath">Absolute path to SKY??.DAT file</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.GetDFPalette(System.Int32)">
            <summary>
            Gets palette data for specified record and frame.
            </summary>
            <param name="Frame">Index of frame.</param>
            <returns>DFPalette object or null.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.GetDFBitmap(System.Int32,System.Int32)">
            <summary>
            Gets bitmap data as indexed 8-bit byte array.
            </summary>
            <param name="Record">Index of record.</param>
            <param name="Frame">Index of frame.</param>
            <returns>DFBitmap object. Check DFBitmap.Data for null on failure.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.GetFrameCount(System.Int32)">
            <summary>
            Gets number of frames in specified record. Always 32 for SKY files.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Number of frames or -1 on error.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.GetSize(System.Int32)">
            <summary>
            Gets width and height of specified record. All frames of this record are the same dimensions.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.GetManagedBitmap(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap from specified record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make colour 0x000000 transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the file. Unlike other image previews, this method will only render frame 20 of record 1.
             This is because all sky images look virtually identical at dawn and only look truly unique around half way through daytime on the brightest side.
             The goal is to create a snapshot unique to each sky palette.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.ReadPalette(System.Int32)">
            <summary>
            Read palette for specified record.
            </summary>
            <param name="Index">Index of palette.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.SkyFile.ReadImageData(System.Int32)">
            <summary>
            Reads image data.
            </summary>
            <param name="Index">Index of image.</param>
        </member>
        <member name="P:DaggerfallConnect.Arena2.SkyFile.RecordCount">
            <summary>
            Number of records in this Sky file. Always 2 for a SKY file (one animation each for east and west sky).
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.SkyFile.PaletteName">
            <summary>
            SKY files are fully palettized per frame.
             This method always returns string.Empty and is implemented only to satisfy abstract base class DFImage.
             Use GetDFPalette(Frame) instead.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.SkyFile.Description">
            <summary>
            Description of this file (always "SKY File" as the game files contain no text descriptions for this file type).
            </summary>
        </member>
        <member name="T:Vector3">
            <summary>
            vector of doubles with three components (x,y,z)
            </summary>
            <author>Richard Potter BSc(Hons)</author>
            <created>Jun-04</created>
            <modified>Feb-07</modified>
            <version>1.20</version>
            <Changes>
            Magnitude is now a property
            Abs(...) now returns magnitude, Recommend: use magnitude property instead
            Equality opeartions now have a tolerance (note that greater and less than type operations do not)
            IsUnit methods also have a tolerence
            Generic IEquatable and IComparable interfaces implemented
            IFormattable interface (ToString(format, format provider) implemented
            Mixed product function implemented
            </Changes>
        </member>
        <member name="F:Vector3.THREE_COMPONENTS">
            <summary>
            Exception message descriptive text 
            Used for a failure for an array argument to have three components when three are needed 
            </summary>
        </member>
        <member name="F:Vector3.NORMALIZE_0">
            <summary>
            Exception message descriptive text 
            Used for a divide by zero event caused by the normalization of a vector with magnitude 0 
            </summary>
        </member>
        <member name="F:Vector3.INTERPOLATION_RANGE">
            <summary>
            Exception message descriptive text 
            Used when interpolation is attempted with a control parameter not between 0 and 1 
            </summary>
        </member>
        <member name="F:Vector3.NON_VECTOR_COMPARISON">
            <summary>
            Exception message descriptive text 
            Used when attempting to compare a Vector3 to an object which is not a type of Vector3 
            </summary>
        </member>
        <member name="F:Vector3.ARGUMENT_TYPE">
            <summary>
            Exception message additional information text 
            Used when adding type information of the given argument into an error message 
            </summary>
        </member>
        <member name="F:Vector3.ARGUMENT_VALUE">
            <summary>
            Exception message additional information text 
            Used when adding value information of the given argument into an error message 
            </summary>
        </member>
        <member name="F:Vector3.ARGUMENT_LENGTH">
            <summary>
            Exception message additional information text 
            Used when adding length (number of components in an array) information of the given argument into an error message 
            </summary>
        </member>
        <member name="F:Vector3.NEGATIVE_MAGNITUDE">
            <summary>
            Exception message descriptive text 
            Used when attempting to set a Vectors magnitude to a negative value 
            </summary>
        </member>
        <member name="F:Vector3.ORAGIN_VECTOR_MAGNITUDE">
            <summary>
            Exception message descriptive text 
            Used when attempting to set a Vectors magnitude where the Vector3 represents the origin
            </summary>
        </member>
        <member name="F:Vector3.EqualityTolerence">
            <summary>
            The tolerence used when determining the equality of two vectors 
            </summary>
        </member>
        <member name="F:Vector3.x">
            <summary>
            The X component of the vector
            </summary>
        </member>
        <member name="F:Vector3.y">
            <summary>
            The Y component of the vector
            </summary>
        </member>
        <member name="F:Vector3.z">
            <summary>
            The Z component of the vector
            </summary>
        </member>
        <member name="M:Vector3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor for the Vector3 class accepting three doubles
            </summary>
            <param name="x">The new x value for the Vector3</param>
            <param name="y">The new y value for the Vector3</param>
            <param name="z">The new z value for the Vector3</param>
            <implementation>
            Uses the mutator properties for the Vector3 components to allow verification of input (if implemented)
            This results in the need for pre-initialisation initialisation of the Vector3 components to 0 
            Due to the necessity for struct's variables to be set in the constructor before moving control
            </implementation>
        </member>
        <member name="M:Vector3.#ctor(System.Double[])">
            <summary>
            Constructor for the Vector3 class from an array
            </summary>
            <param name="xyz">Array representing the new values for the Vector3</param>
            <implementation>
            Uses the VectorArray property to avoid validation code duplication 
            </implementation>
        </member>
        <member name="M:Vector3.#ctor(Vector3)">
            <summary>
            Constructor for the Vector3 class from another Vector3 object
            </summary>
            <param name="v1">Vector3 representing the new values for the Vector3</param>
            <implementation>
            Copies values from Vector3 v1 to this vector, does not hold a reference to object v1 
            </implementation>
        </member>
        <member name="M:Vector3.op_Addition(Vector3,Vector3)">
            <summary>
            Addition of two Vectors
            </summary>
            <param name="v1">Vector3 to be added to </param>
            <param name="v2">Vector3 to be added</param>
            <returns>Vector3 representing the sum of two Vectors</returns>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.op_Subtraction(Vector3,Vector3)">
            <summary>
            Subtraction of two Vectors
            </summary>
            <param name="v1">Vector3 to be subtracted from </param>
            <param name="v2">Vector3 to be subtracted</param>
            <returns>Vector3 representing the difference of two Vectors</returns>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.op_Multiply(Vector3,System.Double)">
            <summary>
            Product of a Vector3 and a scalar value
            </summary>
            <param name="v1">Vector3 to be multiplied </param>
            <param name="s2">Scalar value to be multiplied by </param>
            <returns>Vector3 representing the product of the vector and scalar</returns>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.op_Multiply(System.Double,Vector3)">
            <summary>
            Product of a scalar value and a Vector3
            </summary>
            <param name="s1">Scalar value to be multiplied </param>
            <param name="v2">Vector3 to be multiplied by </param>
            <returns>Vector3 representing the product of the scalar and Vector3</returns>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
            <Implementation>
            Using the commutative law 'scalar x vector'='vector x scalar'.
            Thus, this function calls 'operator*(Vector3 v1, double s2)'.
            This avoids repetition of code.
            </Implementation>
        </member>
        <member name="M:Vector3.op_Division(Vector3,System.Double)">
            <summary>
            Division of a Vector3 and a scalar value
            </summary>
            <param name="v1">Vector3 to be divided </param>
            <param name="s2">Scalar value to be divided by </param>
            <returns>Vector3 representing the division of the vector and scalar</returns>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.op_UnaryNegation(Vector3)">
            <summary>
            Negation of a Vector3
            Invert the direction of the Vector3
            Make Vector3 negative (-vector)
            </summary>
            <param name="v1">Vector3 to be negated  </param>
            <returns>Negated vector</returns>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.op_UnaryPlus(Vector3)">
            <summary>
            Reinforcement of a Vector3
            Make Vector3 positive (+vector)
            </summary>
            <param name="v1">Vector3 to be reinforced </param>
            <returns>Reinforced vector</returns>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
            <Implementation>
            Using the rules of Addition (i.e. '+-x' = '-x' and '++x' = '+x')
            This function actually  does nothing but return the argument as given
            </Implementation>
        </member>
        <member name="M:Vector3.op_LessThan(Vector3,Vector3)">
            <summary>
            Compare the magnitude of two Vectors (less than)
            </summary>
            <param name="v1">Vector3 to be compared </param>
            <param name="v2">Vector3 to be compared with</param>
            <returns>True if v1 less than v2</returns>
        </member>
        <member name="M:Vector3.op_GreaterThan(Vector3,Vector3)">
            <summary>
            Compare the magnitude of two Vectors (greater than)
            </summary>
            <param name="v1">Vector3 to be compared </param>
            <param name="v2">Vector3 to be compared with</param>
            <returns>True if v1 greater than v2</returns>
        </member>
        <member name="M:Vector3.op_LessThanOrEqual(Vector3,Vector3)">
            <summary>
            Compare the magnitude of two Vectors (less than or equal to)
            </summary>
            <param name="v1">Vector3 to be compared </param>
            <param name="v2">Vector3 to be compared with</param>
            <returns>True if v1 less than or equal to v2</returns>
        </member>
        <member name="M:Vector3.op_GreaterThanOrEqual(Vector3,Vector3)">
            <summary>
            Compare the magnitude of two Vectors (greater than or equal to)
            </summary>
            <param name="v1">Vector3 to be compared </param>
            <param name="v2">Vector3 to be compared with</param>
            <returns>True if v1 greater than or equal to v2</returns>
        </member>
        <member name="M:Vector3.op_Equality(Vector3,Vector3)">
            <summary>
            Compare two Vectors for equality.
            Are two Vectors equal.
            </summary>
            <param name="v1">Vector3 to be compared for equality </param>
            <param name="v2">Vector3 to be compared to </param>
            <returns>Boolean decision (truth for equality)</returns>
            <implementation>
            Checks the equality of each pair of components, all pairs must be equal
            A tolerence to the equality operator is applied
            </implementation>
        </member>
        <member name="M:Vector3.op_Inequality(Vector3,Vector3)">
            <summary>
            Negative comparator of two Vectors.
            Are two Vectors different.
            </summary>
            <param name="v1">Vector3 to be compared for in-equality </param>
            <param name="v2">Vector3 to be compared to </param>
            <returns>Boolean decision (truth for in-equality)</returns>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
            <implementation>
            Uses the equality operand function for two vectors to prevent code duplication
            </implementation>
        </member>
        <member name="M:Vector3.CrossProduct(Vector3,Vector3)">
            <summary>
            Determine the cross product of two Vectors
            Determine the vector product
            Determine the normal vector (Vector3 90° to the plane)
            </summary>
            <param name="v1">The vector to multiply</param>
            <param name="v2">The vector to multiply by</param>
            <returns>Vector3 representing the cross product of the two vectors</returns>
            <implementation>
            Cross products are non commutable
            </implementation>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.CrossProduct(Vector3)">
            <summary>
            Determine the cross product of this Vector3 and another
            Determine the vector product
            Determine the normal vector (Vector3 90° to the plane)
            </summary>
            <param name="other">The vector to multiply by</param>
            <returns>Vector3 representing the cross product of the two vectors</returns>
            <implementation>
            Uses the CrossProduct function to avoid code duplication
            <see cref="M:Vector3.CrossProduct(Vector3,Vector3)"/>
            </implementation>
        </member>
        <member name="M:Vector3.DotProduct(Vector3,Vector3)">
            <summary>
            Determine the dot product of two Vectors
            </summary>
            <param name="v1">The vector to multiply</param>
            <param name="v2">The vector to multiply by</param>
            <returns>Scalar representing the dot product of the two vectors</returns>
            <implementation>
            </implementation>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.DotProduct(Vector3)">
            <summary>
            Determine the dot product of this Vector3 and another
            </summary>
            <param name="other">The vector to multiply by</param>
            <returns>Scalar representing the dot product of the two vectors</returns>
            <implementation>
            <see cref="M:Vector3.DotProduct(Vector3)"/>
            </implementation>
        </member>
        <member name="M:Vector3.MixedProduct(Vector3,Vector3,Vector3)">
            <summary>
            Determine the mixed product of three Vectors
            Determine volume (with sign precision) of parallelepiped spanned on given vectors
            Determine the scalar triple product of three vectors
            </summary>
            <param name="v1">The first vector</param>
            <param name="v2">The second vector</param>
            <param name="v3">The third vector</param>
            <returns>Scalar representing the mixed product of the three vectors</returns>
            <implementation>
            Mixed products are non commutable
            <see cref="M:Vector3.CrossProduct(Vector3,Vector3)"/>
            <see cref="M:Vector3.DotProduct(Vector3,Vector3)"/>
            </implementation>
            <Acknowledgement>This code was provided by Michał Bryłka</Acknowledgement>
        </member>
        <member name="M:Vector3.MixedProduct(Vector3,Vector3)">
            <summary>
            Determine the mixed product of three Vectors
            Determine volume (with sign precision) of parallelepiped spanned on given vectors
            Determine the scalar triple product of three vectors
            </summary>
            <param name="other_v1">The second vector</param>
            <param name="other_v2">The third vector</param>
            <returns>Scalar representing the mixed product of the three vectors</returns>
            <implementation>
            Mixed products are non commutable
            <see cref="M:Vector3.MixedProduct(Vector3,Vector3,Vector3)"/>
            Uses MixedProduct(Vector3, Vector3, Vector3) to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Normalize(Vector3)">
            <summary>
            Get the normalized vector
            Get the unit vector
            Scale the Vector3 so that the magnitude is 1
            </summary>
            <param name="v1">The vector to be normalized</param>
            <returns>The normalized Vector3</returns>
            <implementation>
            Uses the Magnitude function to avoid code duplication 
            </implementation>
            <exception cref="T:System.DivideByZeroException">
            Thrown when the normalisation of a zero magnitude vector is attempted
            </exception>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.Normalize">
            <summary>
            Get the normalized vector
            Get the unit vector
            Scale the Vector3 so that the magnitude is 1
            </summary>
            <returns>The normalized Vector3</returns>
            <implementation>
            Uses the Magnitude and Normalize function to avoid code duplication 
            </implementation>
            <exception cref="T:System.DivideByZeroException">
            Thrown when the normalisation of a zero magnitude vector is attempted
            </exception>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.Interpolate(Vector3,Vector3,System.Double,System.Boolean)">
            <summary>
            Take an interpolated value from between two Vectors or an extrapolated value if allowed
            </summary>
            <param name="v1">The Vector3 to interpolate from (where control ==0)</param>
            <param name="v2">The Vector3 to interpolate to (where control ==1)</param>
            <param name="control">The interpolated point between the two vectors to retrieve (fraction between 0 and 1), or an extrapolated point if allowed</param>
            <param name="allowExtrapolation">True if the control may represent a point not on the vertex between v1 and v2</param>
            <returns>The value at an arbitrary distance (interpolation) between two vectors or an extrapolated point on the extended virtex</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the control is not between values of 0 and 1 and extrapolation is not allowed
            </exception>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.Interpolate(Vector3,Vector3,System.Double)">
            <summary>
            Take an interpolated value from between two Vectors
            </summary>
            <param name="v1">The Vector3 to interpolate from (where control ==0)</param>
            <param name="v2">The Vector3 to interpolate to (where control ==1)</param>
            <param name="control">The interpolated point between the two vectors to retrieve (fraction between 0 and 1)</param>
            <returns>The value at an arbitrary distance (interpolation) between two vectors</returns>
            <implementation>
            <see cref="M:Vector3.Interpolate(Vector3,Vector3,System.Double,System.Boolean)"/>
            Uses the Interpolate(Vector3,Vector3,double,bool) method to avoid code duplication
            </implementation>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the control is not between values of 0 and 1
            </exception>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.Interpolate(Vector3,System.Double)">
            <summary>
            Take an interpolated value from between two Vectors
            </summary>
            <param name="other">The Vector3 to interpolate to (where control ==1)</param>
            <param name="control">The interpolated point between the two vectors to retrieve (fraction between 0 and 1)</param>
            <returns>The value at an arbitrary distance (interpolation) between two vectors</returns>
            <implementation>
            <see cref="M:Vector3.Interpolate(Vector3,Vector3,System.Double)"/>
            Overload for Interpolate method, finds an interpolated value between this Vector3 and another
            Uses the Interpolate(Vector3,Vector3,double) method to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Interpolate(Vector3,System.Double,System.Boolean)">
            <summary>
            Take an interpolated value from between two Vectors or an extrapolated value if allowed
            </summary>
            <param name="other">The Vector3 to interpolate to (where control ==1)</param>
            <param name="control">The interpolated point between the two vectors to retrieve (fraction between 0 and 1), or an extrapolated point if allowed</param>
            <param name="allowExtrapolation">True if the control may represent a point not on the vertex between v1 and v2</param>
            <returns>The value at an arbitrary distance (interpolation) between two vectors or an extrapolated point on the extended virtex</returns>
            <implementation>
            <see cref="M:Vector3.Interpolate(Vector3,Vector3,System.Double,System.Boolean)"/>
            Uses the Interpolate(Vector3,Vector3,double,bool) method to avoid code duplication
            </implementation>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the control is not between values of 0 and 1 and extrapolation is not allowed
            </exception>
        </member>
        <member name="M:Vector3.Distance(Vector3,Vector3)">
            <summary>
            Find the distance between two Vectors
            Pythagoras theorem on two Vectors
            </summary>
            <param name="v1">The Vector3 to find the distance from </param>
            <param name="v2">The Vector3 to find the distance to </param>
            <returns>The distance between two Vectors</returns>
            <implementation>
            </implementation>
        </member>
        <member name="M:Vector3.Distance(Vector3)">
            <summary>
            Find the distance between two Vectors
            Pythagoras theorem on two Vectors
            </summary>
            <param name="other">The Vector3 to find the distance to </param>
            <returns>The distance between two Vectors</returns>
            <implementation>
            <see cref="M:Vector3.Distance(Vector3,Vector3)"/>
            Overload for Distance method, finds distance between this Vector3 and another
            Uses the Distance(Vector3,Vector3) method to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Angle(Vector3,Vector3)">
            <summary>
            Find the angle between two Vectors
            </summary>
            <param name="v1">The Vector3 to discern the angle from </param>
            <param name="v2">The Vector3 to discern the angle to</param>
            <returns>The angle between two positional Vectors</returns>
            <implementation>
            </implementation>
            <Acknowledgement>F.Hill, 2001, Computer Graphics using OpenGL, 2ed </Acknowledgement>
        </member>
        <member name="M:Vector3.Angle(Vector3)">
            <summary>
            Find the angle between this Vector3 and another
            </summary>
            <param name="other">The Vector3 to discern the angle to</param>
            <returns>The angle between two positional Vectors</returns>
            <implementation>
            <see cref="M:Vector3.Angle(Vector3,Vector3)"/>
            Uses the Angle(Vector3,Vector3) method to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Max(Vector3,Vector3)">
            <summary>
            compares the magnitude of two Vectors and returns the greater Vector3
            </summary>
            <param name="v1">The vector to compare</param>
            <param name="v2">The vector to compare with</param>
            <returns>
            The greater of the two Vectors (based on magnitude)
            </returns>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.Max(Vector3)">
            <summary>
            compares the magnitude of two Vectors and returns the greater Vector3
            </summary>
            <param name="other">The vector to compare with</param>
            <returns>
            The greater of the two Vectors (based on magnitude)
            </returns>
            <implementation>
            <see cref="M:Vector3.Max(Vector3,Vector3)"/>
            Uses function Max(Vector3, Vector3) to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Min(Vector3,Vector3)">
            <summary>
            compares the magnitude of two Vectors and returns the lesser Vector3
            </summary>
            <param name="v1">The vector to compare</param>
            <param name="v2">The vector to compare with</param>
            <returns>
            The lesser of the two Vectors (based on magnitude)
            </returns>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.Min(Vector3)">
            <summary>
            Compares the magnitude of two Vectors and returns the greater Vector3
            </summary>
            <param name="other">The vector to compare with</param>
            <returns>
            The lesser of the two Vectors (based on magnitude)
            </returns>
            <implementation>
            <see cref="M:Vector3.Min(Vector3,Vector3)"/>
            Uses function Min(Vector3, Vector3) to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Yaw(Vector3,System.Double)">
            <summary>
            Rotates a Vector3 around the Y axis
            Change the yaw of a Vector3
            </summary>
            <param name="v1">The Vector3 to be rotated</param>
            <param name="degree">The angle to rotate the Vector3 around in degrees</param>
            <returns>Vector3 representing the rotation around the Y axis</returns>
        </member>
        <member name="M:Vector3.Yaw(System.Double)">
            <summary>
            Rotates the Vector3 around the Y axis
            Change the yaw of the Vector3
            </summary>
            <param name="degree">The angle to rotate the Vector3 around in degrees</param>
            <returns>Vector3 representing the rotation around the Y axis</returns>
            <implementation>
            <see cref="M:Vector3.Yaw(Vector3,System.Double)"/>
            Uses function Yaw(Vector3, double) to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Pitch(Vector3,System.Double)">
            <summary>
            Rotates a Vector3 around the X axis
            Change the pitch of a Vector3
            </summary>
            <param name="v1">The Vector3 to be rotated</param>
            <param name="degree">The angle to rotate the Vector3 around in degrees</param>
            <returns>Vector3 representing the rotation around the X axis</returns>
        </member>
        <member name="M:Vector3.Pitch(System.Double)">
            <summary>
            Rotates a Vector3 around the X axis
            Change the pitch of a Vector3
            </summary>
            <param name="degree">The angle to rotate the Vector3 around in degrees</param>
            <returns>Vector3 representing the rotation around the X axis</returns>
            <see cref="M:Vector3.Pitch(Vector3,System.Double)"/>
            <implementation>
            Uses function Pitch(Vector3, double) to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Roll(Vector3,System.Double)">
            <summary>
            Rotates a Vector3 around the Z axis
            Change the roll of a Vector3
            </summary>
            <param name="v1">The Vector3 to be rotated</param>
            <param name="degree">The angle to rotate the Vector3 around in degrees</param>
            <returns>Vector3 representing the rotation around the Z axis</returns>
        </member>
        <member name="M:Vector3.Roll(System.Double)">
            <summary>
            Rotates a Vector3 around the Z axis
            Change the roll of a Vector3
            </summary>
            <param name="degree">The angle to rotate the Vector3 around in degrees</param>
            <returns>Vector3 representing the rotation around the Z axis</returns>
            <implementation>
            <see cref="M:Vector3.Roll(Vector3,System.Double)"/>
            Uses function Roll(Vector3, double) to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.Abs(Vector3)">
            <summary>
            Find the absolute value of a Vector3
            Find the magnitude of a Vector3
            </summary>
            <returns>A Vector3 representing the absolute values of the vector</returns>
            <implementation>
            An alternative interface to the magnitude property
            </implementation>
        </member>
        <member name="M:Vector3.Abs">
            <summary>
            Find the absolute value of a Vector3
            Find the magnitude of a Vector3
            </summary>
            <returns>A Vector3 representing the absolute values of the vector</returns>
            <implementation>
            An alternative interface to the magnitude property
            </implementation>
        </member>
        <member name="M:Vector3.SumComponents(Vector3)">
            <summary>
            The sum of a Vector3's components
            </summary>
            <param name="v1">The vector whose scalar components to sum</param>
            <returns>The sum of the Vectors X, Y and Z components</returns>
        </member>
        <member name="M:Vector3.SumComponents">
            <summary>
            The sum of this Vector3's components
            </summary>
            <returns>The sum of the Vectors X, Y and Z components</returns>
            <implementation>
            <see cref="M:Vector3.SumComponents(Vector3)"/>
            The Components.SumComponents(Vector3) function has been used to prevent code duplication
            </implementation>
        </member>
        <member name="M:Vector3.SumComponentSqrs(Vector3)">
            <summary>
            The sum of a Vector3's squared components
            </summary>
            <param name="v1">The vector whose scalar components to square and sum</param>
            <returns>The sum of the Vectors X^2, Y^2 and Z^2 components</returns>
        </member>
        <member name="M:Vector3.SumComponentSqrs">
            <summary>
            The sum of this Vector3's squared components
            </summary>
            <returns>The sum of the Vectors X^2, Y^2 and Z^2 components</returns>
            <implementation>
            <see cref="M:Vector3.SumComponentSqrs(Vector3)"/>
            The Components.SumComponentSqrs(Vector3) function has been used to prevent code duplication
            </implementation>
        </member>
        <member name="M:Vector3.PowComponents(Vector3,System.Double)">
            <summary>
            The individual multiplication to a power of a Vector3's components
            </summary>
            <param name="v1">The vector whose scalar components to multiply by a power</param>
            <param name="power">The power by which to multiply the components</param>
            <returns>The multiplied Vector3</returns>
        </member>
        <member name="M:Vector3.PowComponents(System.Double)">
            <summary>
            The individual multiplication to a power of this Vector3's components
            </summary>
            <param name="power">The power by which to multiply the components</param>
            <returns>The multiplied Vector3</returns>
            <implementation>
            <see cref="M:Vector3.PowComponents(Vector3,System.Double)"/>
            The Components.PowComponents(Vector3, double) function has been used to prevent code duplication
            </implementation>
        </member>
        <member name="M:Vector3.SqrtComponents(Vector3)">
            <summary>
            The individual square root of a Vector3's components
            </summary>
            <param name="v1">The vector whose scalar components to square root</param>
            <returns>The rooted Vector3</returns>
        </member>
        <member name="M:Vector3.SqrtComponents">
            <summary>
            The individual square root of this Vector3's components
            </summary>
            <returns>The rooted Vector3</returns>
            <implementation>
            <see cref="M:Vector3.SqrtComponents(Vector3)"/>
            The Components.SqrtComponents(Vector3) function has been used to prevent code duplication
            </implementation>
        </member>
        <member name="M:Vector3.SqrComponents(Vector3)">
            <summary>
            The Vector3's components squared
            </summary>
            <param name="v1">The vector whose scalar components are to square</param>
            <returns>The squared Vector3</returns>
        </member>
        <member name="M:Vector3.SqrComponents">
            <summary>
            The Vector3's components squared
            </summary>
            <returns>The squared Vector3</returns>
            <implementation>
            <see cref="M:Vector3.SqrtComponents(Vector3)"/>
            The Components.SqrComponents(Vector3) function has been used to prevent code duplication
            </implementation>
        </member>
        <member name="M:Vector3.ToString">
            <summary>
            Textual description of the Vector3
            </summary>
            <Implementation>
            Uses ToString(string, IFormatProvider) to avoid code duplication
            </Implementation>
            <returns>Text (String) representing the vector</returns>
        </member>
        <member name="M:Vector3.ToVerbString">
            <summary>
            Verbose textual description of the Vector3
            </summary>
            <returns>Text (string) representing the vector</returns>
        </member>
        <member name="M:Vector3.ToString(System.String,System.IFormatProvider)">
            <summary>
            Textual description of the Vector3
            </summary>
            <param name="format">Formatting string: 'x','y','z' or '' followed by standard numeric format string characters valid for a double precision floating point</param>
            <param name="formatProvider">The culture specific fromatting provider</param>
            <returns>Text (String) representing the vector</returns>
        </member>
        <member name="M:Vector3.GetHashCode">
            <summary>
            Get the hashcode
            </summary>
            <returns>Hashcode for the object instance</returns>
            <implementation>
            Required in order to implement comparator operations (i.e. ==, !=)
            </implementation>
            <Acknowledgement>This code is adapted from CSOpenGL - Lucas Viñas Livschitz </Acknowledgement>
        </member>
        <member name="M:Vector3.Equals(System.Object)">
            <summary>
            Comparator
            </summary>
            <param name="other">The other object (which should be a vector) to compare to</param>
            <returns>Truth if two vectors are equal within a tolerence</returns>
            <implementation>
            Checks if the object argument is a Vector3 object 
            Uses the equality operator function to avoid code duplication
            Required in order to implement comparator operations (i.e. ==, !=)
            </implementation>
        </member>
        <member name="M:Vector3.Equals(Vector3)">
            <summary>
            Comparator
            </summary>
            <param name="other">The other Vector3 to compare to</param>
            <returns>Truth if two vectors are equal within a tolerence</returns>
            <implementation>
            Uses the equality operator function to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.CompareTo(Vector3)">
            <summary>
            compares the magnitude of this instance against the magnitude of the supplied vector
            </summary>
            <param name="other">The vector to compare this instance with</param>
            <returns>
            -1: The magnitude of this instance is less than the others magnitude
            0: The magnitude of this instance equals the magnitude of the other
            1: The magnitude of this instance is greater than the magnitude of the other
            </returns>
            <implementation>
            Implemented to fulfil the IComparable interface
            </implementation>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.CompareTo(System.Object)">
            <summary>
            compares the magnitude of this instance against the magnitude of the supplied vector
            </summary>
            <param name="other">The vector to compare this instance with</param>
            <returns>
            -1: The magnitude of this instance is less than the others magnitude
            0: The magnitude of this instance equals the magnitude of the other
            1: The magnitude of this instance is greater than the magnitude of the other
            </returns>
            <implementation>
            Implemented to fulfil the IComparable interface
            </implementation>
            <exception cref="T:System.ArgumentException">
            Throws an exception if the type of object to be compared is not known to this class
            </exception>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="M:Vector3.IsUnitVector(Vector3)">
            <summary>
            Checks if a vector a unit vector
            Checks if the Vector3 has been normalized
            Checks if a vector has a magnitude of 1
            </summary>
            <param name="v1">
            The vector to be checked for Normalization
            </param>
            <returns>Truth if the vector is a unit vector</returns>
            <implementation>
            <see cref="P:Vector3.Magnitude"/>	
            Uses the Magnitude property in the check to avoid code duplication
            Within a tolerence
            </implementation>
        </member>
        <member name="M:Vector3.IsUnitVector">
            <summary>
            Checks if the vector a unit vector
            Checks if the Vector3 has been normalized 
            Checks if the vector has a magnitude of 1
            </summary>
            <returns>Truth if this vector is a unit vector</returns>
            <implementation>
            <see cref="M:Vector3.IsUnitVector(Vector3)"/>	
            Uses the isUnitVector(Vector3) property in the check to avoid code duplication
            Within a tolerence
            </implementation>
        </member>
        <member name="M:Vector3.IsBackFace(Vector3,Vector3)">
            <summary>
            Checks if a face normal vector represents back face
            Checks if a face is visible, given the line of sight
            </summary>
            <param name="normal">
            The vector representing the face normal Vector3
            </param>
            <param name="lineOfSight">
            The unit vector representing the direction of sight from a virtual camera
            </param>
            <returns>Truth if the vector (as a normal) represents a back face</returns>
            <implementation>
            Uses the DotProduct function in the check to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.IsBackFace(Vector3)">
            <summary>
            Checks if a face normal vector represents back face
            Checks if a face is visible, given the line of sight
            </summary>
            <param name="lineOfSight">
            The unit vector representing the direction of sight from a virtual camera
            </param>
            <returns>Truth if the vector (as a normal) represents a back face</returns>
            <implementation>
            <see cref="M:Vector3.IsBackFace(Vector3,Vector3)"/> 
            Uses the isBackFace(Vector3, Vector3) function in the check to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.IsPerpendicular(Vector3,Vector3)">
            <summary>
            Checks if two Vectors are perpendicular
            Checks if two Vectors are orthogonal
            Checks if one Vector3 is the normal of the other
            </summary>
            <param name="v1">
            The vector to be checked for orthogonality
            </param>
            <param name="v2">
            The vector to be checked for orthogonality to
            </param>
            <returns>Truth if the two Vectors are perpendicular</returns>
            <implementation>
            Uses the DotProduct function in the check to avoid code duplication
            </implementation>
        </member>
        <member name="M:Vector3.IsPerpendicular(Vector3)">
            <summary>
            Checks if two Vectors are perpendicular
            Checks if two Vectors are orthogonal
            Checks if one Vector3 is the Normal of the other
            </summary>
            <param name="other">
            The vector to be checked for orthogonality
            </param>
            <returns>Truth if the two Vectors are perpendicular</returns>
            <implementation>
            Uses the isPerpendicualr(Vector3, Vector3) function in the check to avoid code duplication
            </implementation>
        </member>
        <member name="F:Vector3.origin">
            <summary>
            Vector3 representing the Cartesian origin
            </summary>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="F:Vector3.xAxis">
            <summary>
            Vector3 representing the Cartesian XAxis
            </summary>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="F:Vector3.yAxis">
            <summary>
            Vector3 representing the Cartesian YAxis
            </summary>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="F:Vector3.zAxis">
            <summary>
            Vector3 representing the Cartesian ZAxis
            </summary>
            <Acknowledgement>This code is adapted from Exocortex - Ben Houston </Acknowledgement>
        </member>
        <member name="F:Vector3.MinValue">
            <summary>
            The smallest vector possible (based on the double precision floating point structure)
            </summary>
        </member>
        <member name="F:Vector3.MaxValue">
            <summary>
            The largest vector possible (based on the double precision floating point structure)
            </summary>
        </member>
        <member name="F:Vector3.Epsilon">
            <summary>
            The smallest positive (non-zero) vector possible (based on the double precision floating point structure)
            </summary>
        </member>
        <member name="P:Vector3.X">
            <summary>
            Property for the x component of the Vector3
            </summary>
        </member>
        <member name="P:Vector3.Y">
            <summary>
            Property for the y component of the Vector3
            </summary>
        </member>
        <member name="P:Vector3.Z">
            <summary>
            Property for the z component of the Vector3
            </summary>
        </member>
        <member name="P:Vector3.Magnitude">
            <summary>
            Property for the magnitude (aka. length or absolute value) of the Vector3
            </summary>
        </member>
        <member name="P:Vector3.Array">
            <summary>
            Property for the Vector3 as an array
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown if the array argument does not contain exactly three components 
            </exception> 
        </member>
        <member name="P:Vector3.Item(System.Int32)">
            <summary>
            An index accessor 
            Mapping index [0] -&gt; X, [1] -&gt; Y and [2] -&gt; Z.
            </summary>
            <param name="index">The array index referring to a component within the vector (i.e. x, y, z)</param>
            <exception cref="T:System.ArgumentException">
            Thrown if the array argument does not contain exactly three components 
            </exception>
        </member>
        <member name="T:DaggerfallConnect.DFBlock">
            <summary>
            Stores information about a block record. This is fundamentally equivalent to native block data,
             but is type-safe and structured for use. Blocks are one of the more complex
             types of compound data in Daggerfall. Please see Tutorials for code examples of
             working with DFBlock.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.Index">
            <summary>
            Index of the block in BLOCKS.BSA.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.Name">
            <summary>
            Name of the block in BLOCKS.BSA.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.Type">
            <summary>
            Defines the type of block data stored.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock">
            <summary>
            Contains RMB (city) block data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlock">
            <summary>
            Contains RDB (dungeon) block data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdiBlock">
            <summary>
            Contains RDI (unknown) block data.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.BlockTypes">
            <summary>
            Possible block types enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.BlockTypes.Unknown">
            <summary>Block type is not defined.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.BlockTypes.Rmb">
            <summary>A city block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.BlockTypes.Rdb">
            <summary>A dungeon block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.BlockTypes.Rdi">
            <summary>RDI blocks are currently unsupported and should be ignored.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbTypes">
            <summary>
            RDB block types, derived from first letter of block name.
             RdbTypes.Start is a special case as this can only be derived from
             map data. The value is here in case you want to track start blocks.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Unknown">
            <summary>Rdb type is not defined.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Border">
            <summary>Border block used to seal dungeon.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Normal">
            <summary>Normal block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Wet">
            <summary>Flooded block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Quest">
            <summary>Used in main quest.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Mausoleum">
            <summary>Crypt block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbTypes.Start">
            <summary>Optional. Can be used when tracking start block.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockDesc">
            <summary>
            An RMB Block has this basic structure.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDesc.FldHeader">
            <summary>Fixed length data (FLD) header.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDesc.SubRecords">
            <summary>Contains block subrecords for exterior and interior object.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDesc.Misc3dObjectRecords">
            <summary>Defines additional 3D objects positioned arbitrarily inside block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDesc.MiscFlatObjectRecords">
            <summary>Defines additional flat (billboard) objects positioned arbitrarily inside block.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockFld">
            <summary>
            Fixed length data (FLD) header of block record.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.NumBlockDataRecords">
            <summary>Count of block records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.NumMisc3dObjectRecords">
            <summary>Count of miscellaneous 3D object records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.NumMiscFlatObjectRecords">
            <summary>Count of miscellaneous flat object records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.BlockPositions">
            <summary>Position of block record in 3D space (array is 32 records long, but only up to numBlockDataRecords have valid data).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.Section1UnknownData">
            <summary>Unknown data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.Section2UnknownData">
            <summary>Unknown data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.BlockDataSizes">
            <summary>Length of block record data in bytes (array is 32 records long, but only up to numBlockDataRecords have valid data).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.GroundData">
            <summary>Ground data to draw under a city block, such as ground textures, trees, rocks, etc.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.AutoMapData">
            <summary>A 64x64 pixel automap image.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.Name">
            <summary>Name of this block. This always matches the BSA record name for this block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFld.OtherNames">
            <summary>Array of 32 other names for this block. Unknown purpose.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbFldBlockPositions">
            <summary>
            Position of the block in 3D space.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldBlockPositions.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldBlockPositions.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldBlockPositions.XPos">
            <summary>X position of block in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldBlockPositions.ZPos">
            <summary>Z position of block in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldBlockPositions.YRotation">
            <summary>Y rotation.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbGroundTiles">
            <summary>
            Describes a single ground tile and how to orient the texture. The texture archive to use is based on the region.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundTiles.TileBitfield">
            <summary>Texture and alignment data compressed to a bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundTiles.TextureRecord">
            <summary>Texture record from bitfield. Used to determine which texture record to load from regional archive.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundTiles.IsRotated">
            <summary>When true the texture should be rotated 90 degrees so its width becomes it height.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundTiles.IsFlipped">
            <summary>When true the texture should be flipped in both X and Y directions.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbGroundScenery">
            <summary>
            Describes a single flat scenery item (tree, rock, etc.) for this block.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundScenery.TileBitfield">
            <summary>Texture and some unknown data compressed into a bitfield</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundScenery.Unknown1">
            <summary>Unknown data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbGroundScenery.TextureRecord">
            <summary>
            Texture record from bitfield. Used to determine which texture record to load from regional archive.
             A negative value means no scenery in this spot.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbFldGroundData">
            <summary>
            Ground data to draw under a city block, such as ground textures, trees, rocks, etc.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldGroundData.Header">
            <summary>Header with unknown data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldGroundData.GroundTiles">
            <summary>A 16x16 array of ground tiles. Each tile is 256x256 world units.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbFldGroundData.GroundScenery">
            <summary>
            A 16x16 array of ground scenery data (trees, rocks, etc.). These are spaced every 256 world units
             (left to right, top to bottom). In effect, the scenery is placed in the "corners" of the ground tiles.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbSubRecord">
            <summary>
            An RMB subrecord has a repeating set of data.
             The first set is for the exterior of the block (e.g. a tavern exterior).
             The second is for the interior (e.g. the walls, tables, and chairs inside the tavern).
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbSubRecord.XPos">
            <summary>X position of block in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbSubRecord.ZPos">
            <summary>Z position of block in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbSubRecord.YRotation">
            <summary>Y rotation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbSubRecord.Exterior">
            <summary>Exterior block data records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbSubRecord.Interior">
            <summary>Interior block data records.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockData">
            <summary>
            Defines block resources stored in this subrecord.
             Check header for how many resources of any type are to be found in this definition.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockData.Header">
            <summary>Header data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockData.Block3dObjectRecords">
            <summary>3D objects to position around the block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockData.BlockFlatObjectRecords">
            <summary>Flatt (billboard) objects to position around the block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockData.BlockSection3Records">
            <summary>Unknown data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockData.BlockPeopleRecords">
            <summary>People (NPCs) to position around the block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockData.BlockDoorRecords">
            <summary>Doors the player can open and close to position around the block.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockHeader">
            <summary>
            RMB block data header.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Position">
            <summary>The start position in the BSA record data stream. Primarily used by block readers.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Num3dObjectRecords">
            <summary>Count of 3D object records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.NumFlatObjectRecords">
            <summary>Count of flat (billboard) object records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.NumSection3Records">
            <summary>Count of unknown data records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.NumPeopleRecords">
            <summary>Count of people (NPC) records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.NumDoorRecords">
            <summary>Count of door records.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Unknown4">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Unknown5">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockHeader.Unknown6">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord">
            <summary>
            3D object data, such as buildings, walls, tables, cages, etc.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ModelId">
            <summary>ID of model to be loaded.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ModelIdNum">
            <summary>Model ID parsed to UInt32.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ObjectId1">
            <summary>Used to find the ObjectID of the mesh to use in conjuction with objectId2.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ObjectId2">
            <summary>Used to find the ObjectID of the mesh to use in conjuction with objectId1.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ObjectType">
            <summary>Object type for an unknown enumeration. 0x03 = misc indoor objects.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.NullValue1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.XPos1">
            <summary>Unknown X position.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.YPos1">
            <summary>Unknown Y position.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ZPos1">
            <summary>Unknown Z position.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.XPos">
            <summary>X position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.YPos">
            <summary>Y position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.ZPos">
            <summary>Z position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.NullValue2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.YRotation">
            <summary>Y rotation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.Unknown4">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.NullValue3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.Unknown5">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlock3dObjectRecord.NullValue4">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord">
            <summary>
            Flat object (billboard) data, such as haystacks and horses.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.XPos">
            <summary>X position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.YPos">
            <summary>Y position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.ZPos">
            <summary>Z position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.TextureBitfield">
            <summary>Index of texture compressed to a bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.TextureArchive">
            <summary>Texture archive from bitfield. Used to determine which texture file to load (e.g. TEXTURE.210).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.TextureRecord">
            <summary>Texture record from bitfield. Used to determine which texture record to load from archive.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockFlatObjectRecord.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockSection3Record">
            <summary>
            Records of an unknown type.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockSection3Record.XPos">
            <summary>X position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockSection3Record.YPos">
            <summary>Y position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockSection3Record.ZPos">
            <summary>Z position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockSection3Record.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockSection3Record.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockSection3Record.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord">
            <summary>
            People (NPCs), such as shopkeepers and quest givers.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.XPos">
            <summary>X position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.YPos">
            <summary>Y position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.ZPos">
            <summary>Z position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.TextureBitfield">
            <summary>Index of texture compressed to a bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.TextureArchive">
            <summary>Texture archive from bitfield. Used to determine which texture file to load (e.g. TEXTURE.210).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.TextureRecord">
            <summary>Texture record from bitfield. Used to determine which texture record to load from archive.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.NpcType">
            <summary>NPC type.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockPeopleRecord.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RmbBlockDoorRecord">
            <summary>
            Doors the player can open and close.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.XPos">
            <summary>X position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.YPos">
            <summary>Y position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.ZPos">
            <summary>Z position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RmbBlockDoorRecord.NullValue1">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbResourceTypes">
            <summary>
            Resource types enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbResourceTypes.Model">
            <summary>3D model resource.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbResourceTypes.Light">
            <summary>Light resource.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbResourceTypes.Flat">
            <summary>Flat resource.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbFlatGenders">
            <summary>
            Gender enumeration for NPC flats.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatGenders.Male">
            <summary>NPC is male.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatGenders.Female">
            <summary>NPC is female.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbActionAxes">
            <summary>
            Action axis enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.None">
            <summary>Axis unspecified.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.NegativeX">
            <summary>Negative X axis.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.PositiveX">
            <summary>Positive X axis.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.NegativeY">
            <summary>Negative Y axis.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.PositiveY">
            <summary>Positive Y axis.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.NegativeZ">
            <summary>Negative Y axis.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionAxes.PositiveZ">
            <summary>Positive Z axis.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbActionType">
            <summary>
            Action type enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.None">
            <summary>Action unspecified.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.Translation">
            <summary>Translation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.Rotation">
            <summary>Rotation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.Unknown4">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionType.Unknown5">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbModelData">
            <summary>
            Unknown model data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelData.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbBlockDesc">
            <summary>
            An RDB block has this general structure.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockDesc.Position">
            <summary>Position in stream to find this data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockDesc.Header">
            <summary>RDB block header.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockDesc.ModelReferenceList">
            <summary>List of 750 sequential model indices.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockDesc.ModelDataList">
            <summary>List of 750 4-byte values of unknown use.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockDesc.ObjectHeader">
            <summary>Object section header.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockDesc.ObjectRootList">
            <summary>List of offsets to root of linked list describing objects in this block.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbBlockHeader">
            <summary>
            Block header. Total number of objects in list from root offset is width*height.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockHeader.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockHeader.Width">
            <summary>Width of dungeon block in unknown grid layout.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockHeader.Height">
            <summary>Height of dungeon block in unknown grid layout.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockHeader.ObjectRootOffset">
            <summary>Offset to start of object root section.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbBlockHeader.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbModelReference">
            <summary>
            Model reference. Used to locate a specific model in ARCH3D.BSA.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelReference.ModelId">
            <summary>ID of model to be loaded.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelReference.ModelIdNum">
            <summary>Model ID parsed to UInt32.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelReference.Description">
            <summary>Three letter description of model.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbObjectHeader">
            <summary>
            RDB object header.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.UnknownOffset">
            <summary>Offset to linked list of unknown purpose.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Length">
            <summary>Length of dungeon record in bytes.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Unknown4">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Dagr">
            <summary>Usually the string "DAGR".</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectHeader.Unknown5">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbObjectRoot">
            <summary>
            Array of objects to load into the scene.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectRoot.RootOffset">
            <summary>Offset to root of object list from start of RDB record. Not required unless you are extending the block reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObjectRoot.RdbObjects">
            <summary>List of objects.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbObject">
            <summary>
            A single RDB object has this structure.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.This">
            <summary>Offset of this object from start of RDB record. Not required unless you are extending the block reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.Next">
            <summary>Offset to next object from start of RDB record. Not required unless you are extending the block reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.Previous">
            <summary>Offset to previous object from start of RDB record. Not required unless you are extending the block reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.Index">
            <summary>Index of this object in the objects array.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.XPos">
            <summary>X position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.YPos">
            <summary>Y position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.ZPos">
            <summary>Z position in 3D space.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.Type">
            <summary>Type of resource.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.ResourceOffset">
            <summary>Offset to resource data from start of RDB record. Not required unless you are extending the block reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbObject.Resources">
            <summary>Resource data. Check type for the specific resource to use.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbResources">
            <summary>
            Aggregated resources. Only one resource will be valid.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbResources.ModelResource">
            <summary>3D object resource.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbResources.LightResource">
            <summary>Light resource.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbResources.FlatResource">
            <summary>Flat (billboard) resource.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbModelResource">
            <summary>
            A model resource has this structure.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.XRotation">
            <summary>X rotation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.YRotation">
            <summary>Y rotation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.ZRotation">
            <summary>Z rotation.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.ModelIndex">
            <summary>Index into ModelReferenceList array.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.ActionOffset">
            <summary>Offset to action resource from start of RDB record. Not required unless you are extending the block reader.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbModelResource.ActionResource">
            <summary>Action resource.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbLightResource">
            <summary>
            The light resource structure is currently unknown.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbLightResource.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbLightResource.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbLightResource.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbFlatResource">
            <summary>
            A flat (billboard) resource has this structure.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatResource.TextureBitfield">
            <summary>Index of texture compressed to a bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatResource.TextureArchive">
            <summary>Texture archive from bitfield. Used to determine which texture file to load (e.g. TEXTURE.210).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatResource.TextureRecord">
            <summary>Texture record from bitfield. Used to determine which texture record to load from archive.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatResource.Gender">
            <summary>NPC gender (if any).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatResource.FactionId">
            <summary>NPC faction (if any(.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbFlatResource.Unknown1">
            <summary>Internal.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdbActionResource">
            <summary>
            Action resource.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.Position">
            <summary>Position in stream to find this data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.Axis">
            <summary>About which the object should rotate or translate.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.Duration">
            <summary>Length of time the object takes to reach its final state.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.Magnitude">
            <summary>The amount to translate/rotate around the specified axis.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.NextObjectOffset">
            <summary>
            Offset from start of RDB record to an object that should be activated
             directly after this object. This allows actions to be chained together.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.PreviousObjectIndex">
            <summary>
            Index of previous model in RdbObject array that linked to this model
             in an action chain. This allows action records to be chained
             backwards to the root action.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.NextObjectIndex">
            <summary>
            Index of model in RdbObject array that should be activated
             directly after this object. This allows actions to be chained
             forwards through multiple objects.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdbActionResource.ActionType">
            <summary>The type of action to perform.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBlock.RdiBlockDesc">
            <summary>
            Monolithic RDI bytes.
             Format of Data is currently unknown.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBlock.RdiBlockDesc.Data">
            <summary>
            512 bytes of unknown data.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFManualImage">
            <summary>
            Used to constructs manual images from DFImage. Provides all the base handling from DFImageFile, and all the benefits
             (e.g. preview, format conversion, palette handling, etc.). However, it only stores a single image.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.#ctor(DaggerfallConnect.DFBitmap)">
            <summary>
            Constructor using a DFBitmap.
            </summary>
            <param name="dfBitmap">Source DFBitmap object.</param>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.#ctor(System.Int32,System.Int32,DaggerfallConnect.DFBitmap.Formats)">
            <summary>
            Constructor to create an empty image of size and format.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="format"></param>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Implemented only to satisfy abstract base. Does nothing.
            </summary>
            <param name="FilePath">N/A</param>
            <param name="Usage">N/A</param>
            <param name="ReadOnly">N/A</param>
            <returns>Always true.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.GetSize(System.Int32)">
            <summary>
            Gets width and height of specified record. As manual images only have 1 record,
             this must be 0.
            </summary>
            <param name="Record">Index of record. Must be 0.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.GetFrameCount(System.Int32)">
            <summary>
            Gets number of frames in specified record.
            </summary>
            <param name="Record">Index of record. Must be 0 for manual images.</param>
            <returns>Number of frames. Always 1 for manual images.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the image.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.GetDFBitmap(System.Int32,System.Int32)">
            <summary>
            Gets bitmap data as indexed 8-bit byte array for specified record and frame.
             Manual images only have 1 image, so the Record and Frame indices must always be 0
             when calling this method.
            </summary>
            <param name="Record">Index of record. Must be 0.</param>
            <param name="Frame">Index of frame. Must be 0.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.GetManagedBitmap(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap.
            </summary>
            <param name="Record">Record index. Must be 0 for manual images.</param>
            <param name="Frame">Frame index. Must be 0 for manual images.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make colour 0x000000 transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.SetData(System.Byte[])">
            <summary>
            Set data byte array to anything.
             Other image properties must also be set manually.
             Byte array Must be equal to stride*height.
            </summary>
            <param name="Data">Byte array.</param>
        </member>
        <member name="M:DaggerfallConnect.DFManualImage.Clear(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Clears image to specified color.
            </summary>
            <param name="a">Alpha.</param>
            <param name="r">Red.</param>
            <param name="g">Green.</param>
            <param name="b">Blue.</param>
        </member>
        <member name="P:DaggerfallConnect.DFManualImage.PaletteName">
            <summary>
            Manual images do not use a specific palette. This will always return string.Empty.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFManualImage.Description">
            <summary>
            Description of this file. Always "Manual Image".
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFManualImage.RecordCount">
            <summary>
            Number of image records in this manual image. Always 1.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.DFManualImage.DFBitmap">
            <summary>
            Gets or sets DFBitmap object.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.WoodsFile">
            <summary>
            Reads data from WOODS.WLD.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.MapWidthValue">
            <summary>Width of heightmap in bytes.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.MapHeightValue">
            <summary>Height of heightmap in bytes.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.MapBufferLengthValue">
            <summary>Memory length of heightmap in bytes.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.ManagedFile">
            <summary>
            Abstracts WOODS.WLD file to a managed disk or memory stream.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.Header">
            <summary>
            Contains the WOODS.WLD file header data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.DataOffsets">
            <summary>
            Offsets to CellData structures. There are 1000*500 offsets that correspond to
             the standard 1000x500 world map structure.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.DataSection1Data">
            <summary>
            UNUSED.
             Unknown data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.WoodsFile.HeightMapBuffer">
            <summary>
            Height map data.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to WOODS.WLD.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load WOODS.WLD file.
            </summary>
            <param name="FilePath">Absolute path to WOODS.WLD file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.GetHeightMapDFBitmap">
            <summary>
            Get extracted heightmap data as an indexed image.
            </summary>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.GetHeightMapManagedBitmap">
            <summary>
            Get extracted heightmap data as a managed bitmap.
            </summary>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.GetHeightMapValue(System.Int32,System.Int32)">
            <summary>
            Gets value for specified position in heightmap.
            </summary>
            <param name="x">X position in heightmap. 0 to MapWidth-1.</param>
            <param name="y">Y position in heightmap. 0 to MapHeight-1.</param>
            <returns>Value of heightmap data if valid, -1 if invalid.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.Read">
            <summary>
            Read file.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.ReadHeader(System.IO.BinaryReader)">
            <summary>
            Read header data.
            </summary>
            <param name="Reader">Reader to stream.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.ReadDataOffsets(System.IO.BinaryReader)">
            <summary>
            Read data offsets.
            </summary>
            <param name="Reader">Reader to stream, positioned at start of offset data.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.ReadDataSection1(System.IO.BinaryReader)">
            <summary>
            Read DataSection1 data.
             The purpose of this data is currently unknown.
            </summary>
            <param name="Reader">Reader to stream.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.WoodsFile.ReadHeightMap(System.IO.BinaryReader)">
            <summary>
            Read heightmap data.
            </summary>
            <param name="Reader">Reader to stream.</param>
        </member>
        <member name="P:DaggerfallConnect.Arena2.WoodsFile.MapWidth">
            <summary>
            Width of heightmap data (always 1000).
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.WoodsFile.MapHeight">
            <summary>
            Height of heightmap data (always 500).
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.WoodsFile.Buffer">
            <summary>
            Gets a copy of extracted heightmap data.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.WoodsFile.FileHeader">
            <summary>
            Represents WOODS.WLD file header.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.WoodsFile.DataSection1">
            <summary>
            UNUSED.
             Represents DataSection1 data.
             The purpose of this data is currently unknown.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.PakFile">
            <summary>
            Connects to CLIMATE.PAK or POLITIC.PAK to extract and read meta-data about the Daggerfall world map.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.PakFile.PakRowCountValue">
            <summary>Number of PAK rows.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.PakFile.PakRowLengthValue">
            <summary>Length of each PAK row.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.PakFile.PakBufferLengthValue">
            <summary>Memory length of extracted PAK file.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.PakFile.ManagedFile">
            <summary>Abstracts PAK file to a managed disk or memory stream.</summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.PakFile.PakExtractedBuffer">
            <summary>Extracted PAK file buffer.</summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.PakFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.PakFile.#ctor(System.String)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to PAK file.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.PakFile.Load(System.String)">
            <summary>
            Load PAK file.
            </summary>
            <param name="FilePath">Absolute path to PAK file.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.PakFile.GetDFBitmap">
            <summary>
            Get extracted PAK data as an indexed image.
            </summary>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.PakFile.GetManagedBitmap">
            <summary>
            Get extracted PAK data as a managed bitmap.
            </summary>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.PakFile.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets value for specified position in world map.
            </summary>
            <param name="x">X position in world map. 0 to PakRowLength-1.</param>
            <param name="y">Y position in world map. 0 to PakRowCount-1.</param>
            <returns>Value of pak data if valid, -1 if invalid.</returns>
        </member>
        <member name="P:DaggerfallConnect.Arena2.PakFile.Buffer">
            <summary>
            Obtain a copy of extracted PAK data.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.PakFile.PakRowCount">
            <summary>
            Number of rows in PAK file (always 500).
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.PakFile.PakRowLength">
            <summary>
            Number of bytes per PAK row (always 1001).
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Utility.FaceUVTool">
            <summary>
            This class is based on Dave Humphrey's DF_3DSTex.CPP.
             Modified for Daggerfall Connect Library by Gavin Clayton "Interkarma" (www.dfworkshop.net).
             For original version download DFTo3DS at www.uesp.net.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Utility.FaceUVTool.ComputeFaceUVCoordinates(DaggerfallConnect.Utility.FaceUVTool.DFPurePoint[]@,DaggerfallConnect.Utility.FaceUVTool.DFPurePoint[]@)">
            <summary>
            Calculates absolute UV values for all points of a face.
            </summary>
            <param name="FaceVertsIn">Source array of native point values.</param>
            <param name="FaceVertsOut">Destination array for calculated UV values.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="T:DaggerfallConnect.Utility.FaceUVTool.DFPurePoint">
            <summary>
            Describes a single Daggerfall-native vertex.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Utility.FaceUVTool.DF2DPoint">
            <summary>
            Used to store a 2D point.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Utility.FaceUVTool.df3duvparams_lt">
            <summary>
            Local type for matrix conversion parameters.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Utility.FaceUVTool.df3duvmatrix_t">
            <summary>
            Used to convert XYZ point coordinates to DF UV coordinates.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.ImgFile">
            <summary>
            Connects to a *.IMG file to enumerate and extract image data. Each IMG file contains a single image.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.ImgFile.Header">
            <summary>
            File header.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.ImgFile.ImgRecord">
            <summary>
            The image data for this image. Each IMG file only contains a single image.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.ImgFile.IsPalettizedValue">
            <summary>
            Specifies if this IMG file defines its own palette.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.ImgFile.PaletteDataPosition">
            <summary>
            Start of palettized data in file. Only valid when IsPalettized is true;
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.ImgFile.ImageDataPosition">
            <summary>
            Start of image data in file.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to *.IMG file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.#ctor(System.String,DaggerfallConnect.FileUsage,DaggerfallConnect.DFPalette,System.Boolean)">
            <summary>
            Load constructor with palette assignment.
            Some IMG files contain palette information, this will overwrite the specified palette.
            </summary>
            <param name="FilePath">Absolute path to *.IMG file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="Palette">Palette to use when building images.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.String,System.Boolean)">
            <summary>
            Load constructor that also loads a palette.
            Some IMG files contain palette information, this will overwrite the specified palette.
            </summary>
            <param name="FilePath">Absolute path to *.IMG file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="PaletteFilePath">Absolute path to Daggerfall palette file.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.UnsupportedFilenames">
            <summary>
            Gets unsupported filenames. The three IMG filenames returned have no image data or are otherwise invalid.
            </summary>
            <returns>Array of unsupported filenames.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.IsFilenameSupported(System.String)">
            <summary>
            Tests if a filename is supported.
            </summary>
            <param name="Filename">Name of *.IMG file.</param>
            <returns>True if supported, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Loads an IMG file.
            </summary>
            <param name="FilePath">Absolute path to *.IMG file</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetDFBitmap">
            <summary>
            Gets bitmap data as indexed 8-bit byte array.
            </summary>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetDFBitmap(System.Int32,System.Int32)">
            <summary>
            Gets bitmap data as indexed 8-bit byte array for specified record and frame.
             This method is an override for abstract method in parent class DFImageFile.
             As IMG files only have 1 image the Record and Frame indices must always be 0
             when calling this method.
            </summary>
            <param name="Record">Index of record. Must be 0.</param>
            <param name="Frame">Index of frame. Must be 0.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetFrameCount(System.Int32)">
            <summary>
            Gets number of frames in specified record.
            </summary>
            <param name="Record">Index of record. Must be 0 for Img files.</param>
            <returns>Number of frames. Always 1 for loaded Img files.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetSize(System.Int32)">
            <summary>
            Gets width and height of specified record. As IMG files only have 1 record,
             this must be 0.
            </summary>
            <param name="Record">Index of record. Must be 0.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetManagedBitmap(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap from specified record and frame.
            </summary>
            <param name="Record">Record index. Must be 0 for Img files.</param>
            <param name="Frame">Frame index. Must be 0 for Img files.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make colour 0x000000 transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the file.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.GetHeaderlessFileImageDimensions">
            <summary>
            IMG files have a fixed width and height not specified in a header.
             This method returns the correct dimensions of images inside these files.
            </summary>
            <returns>Dimensions of image.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.Read">
            <summary>
            Read file.
            </summary>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.ReadHeader(System.IO.BinaryReader@)">
            <summary>
            Reads file header.
            </summary>
            <param name="Reader">Source reader.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.ReadImageData">
            <summary>
            Reads image data.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.ReadImage(System.IO.BinaryReader@)">
            <summary>
            Read uncompressed image data.
            </summary>
            <param name="Reader">Source reader positioned at start of image data.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.ImgFile.ReadPalette(System.IO.BinaryReader@)">
            <summary>
            Some IMG files contain palette information following the image data.
             This palette will replace any previosuly specified palette.
            </summary>
            <param name="Reader">Source reader positioned at end of image data.</param>
        </member>
        <member name="P:DaggerfallConnect.Arena2.ImgFile.IsPalettized">
            <summary>
            Specifies if this IMG file defines its own palette.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.ImgFile.PaletteName">
            <summary>
            IMG files use a variety of palettes. This property returns the correct palette filename to use for this image.
             Palettized images (check IsPalettized flag) will return String.Emtpy for the palette filename.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.ImgFile.RecordCount">
            <summary>
            Number of image records in this Img file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.ImgFile.Description">
            <summary>
            Description of this file (always "IMG File" as the game files contain no text descriptions for this file type).
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFRegion">
            <summary>
            Stores information about locations in a region.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.Name">
            <summary>
            Name of this region.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationCount">
            <summary>
            Number of locations in this region. Not all regions have locations.
             Always check LocationCount before working with MapNames array.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.MapNames">
            <summary>
            Contains the names of all locations for this region.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.MapTable">
            <summary>
            Contains extended data about each location in this region.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.MapIdLookup">
            <summary>
            Dictionary to find map index from MapID.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.MapNameLookup">
            <summary>
            Dictionary to find a map index from map name. Note that some map names
             are duplicates. Only the first instance will be stored and subsequent
             duplicates discarded. These locations can still be referenced by MapID or index.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFRegion.LocationTypes">
            <summary>
            Describes location types that appear on the automap.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.DungeonLabyrinth">
            <summary>Large dungeon.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.DungeonKeep">
            <summary>Medium dungeon.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.DungeonRuin">
            <summary>Small dungeon.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.GraveyardCommon">
            <summary>Graveyard visible.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.GraveyardForgotten">
            <summary>Graveyard hidden.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.HomeFarms">
            <summary>Farmhouse.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.HomeWealthy">
            <summary>Wealthy home.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.HomePoor">
            <summary>Poor home.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.HomeYourShips">
            <summary>Player ship.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.Tavern">
            <summary>Tavern</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.ReligionTemple">
            <summary>Temple.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.ReligionCult">
            <summary>Cult.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.ReligionCoven">
            <summary>Coven.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.TownCity">
            <summary>Large settlement.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.TownHamlet">
            <summary>Medium settlement.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.LocationTypes.TownVillage">
            <summary>Small settlement.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFRegion.BuildingTypes">
            <summary>
            These are the building types used for the automap (as value+1), quest subsystem, and
             location building database.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Alchemist">
            <summary>Alchemist</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.HouseForSale">
            <summary>HouseForSale</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Amorer">
            <summary>Amorer</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Bank">
            <summary>Bank</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Town4">
            <summary>Town4</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Bookseller">
            <summary>Bookseller</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.ClothingStore">
            <summary>ClothingStore</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.FurnitureStore">
            <summary>FurnitureStore</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.GemStore">
            <summary>GemStore</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.GeneralStore">
            <summary>GeneralStore</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Library">
            <summary>Library</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Guildhall">
            <summary>Guildhall</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.PawnShop">
            <summary>PawnShop</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.WeaponSmith">
            <summary>WeaponSmith</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Temple">
            <summary>Temple</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Tavern">
            <summary>Tavern</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Palace">
            <summary>Palace</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.House1">
            <summary>House1</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.House2">
            <summary>House2</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.House3">
            <summary>House3</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.House4">
            <summary>House4</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.House5">
            <summary>House5</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.House6">
            <summary>House6</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Town23">
            <summary>Town23</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Ship">
            <summary>Ship</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Special1">
            <summary>Special1</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Special2">
            <summary>Special2</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Special3">
            <summary>Special3</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.BuildingTypes.Special4">
            <summary>Special4</summary>
        </member>
        <member name="T:DaggerfallConnect.DFRegion.RegionMapTable">
            <summary>
            Describes a single location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.MapId">
            <summary>Numeric ID of this location.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.DungeonMapId">
            <summary>Numeric ID of dungeon map associated with this location.
             Set to 0 if no dungeon for this location.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.LongitudeTypeBitfield">
            <summary>Longitude and Type compressed into a bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.Longitude">
            <summary>Longitude value read from bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.Type">
            <summary>Type value read from bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.Latitude">
            <summary>Latitude of this location.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFRegion.RegionMapTable.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.Utility.DFModTool">
            <summary>
            Class for modifying certain values in Daggerfall's files
             to aid research.
             These methods are special-purpose, and not intended for general editing.
             Do not use unless you know exactly what you
             are doing and always make a backup of your game files beforehand.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Utility.DFModTool.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="arena2Path">Path to ARENA2 folder..</param>
        </member>
        <member name="M:DaggerfallConnect.Utility.DFModTool.ModActionRecord(System.String,System.Int64,System.Byte,System.UInt16,System.UInt16)">
            <summary>
            Changes action record at specified position.
            </summary>
            <param name="blockName">Name of block file.</param>
            <param name="position">Start position of action record.</param>
            <param name="axis">Rotation axis.</param>
            <param name="duration">Duration of action.</param>
            <param name="magnitude">Magnitude of action.</param>
        </member>
        <member name="M:DaggerfallConnect.Utility.DFModTool.ModPlaneTexture(System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ARCH3D.BSA: Modify base texture assigned to plane.
            </summary>
            <param name="MeshID">ID of mesh.</param>
            <param name="planeIndex">Plane index.</param>
            <param name="textureArchive">New texture archive index to set.</param>
            <param name="textureRecord">New texture record inex to set.</param>
        </member>
        <member name="M:DaggerfallConnect.Utility.DFModTool.WritePakFile(System.Byte[],System.String)">
            <summary>
            *.PAK: Writes a PAK file from the specified buffer.
             Source buffer must be 1001x500 (500500) bytes.
            </summary>
            <param name="buffer">Source buffer to save in PAK format.</param>
            <param name="path">Destination path and filename.</param>
        </member>
        <member name="T:DaggerfallConnect.Utility.DFModTool.PakRun">
            <summary>
            Pak chunk.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation">
            <summary>
            Stores information about locations, such as cities and dungeons.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.Name">
            <summary>
            Name of this location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.RegionName">
            <summary>
            Name of the parent region.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.HasDungeon">
            <summary>
            True if location has a dungeon, otherwise false.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.MapTableData">
            <summary>
            RegionMapTable data for this location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.Exterior">
            <summary>
            Exterior location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.Dungeon">
            <summary>
            Dungeon attached to location (if HasDungeon = true).
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.Climate">
            <summary>
            Climate settings for this location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.Politic">
            <summary>
            Political alignment of this location (equal to region index + 128).
            </summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.ClimateBaseType">
            <summary>
            Climate base type enumeration for climate-swapping textures.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateBaseType.None">
            <summary>No climate type.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateBaseType.Desert">
            <summary>Desert climate type.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateBaseType.Mountain">
            <summary>Mountain climate type.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateBaseType.Temperate">
            <summary>Temperate/Woodland climate type.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateBaseType.Swamp">
            <summary>Swamp climate type.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.ClimateTextureSet">
            <summary>
            Climate texture sets for climate-swapping textures.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.None">
            <summary>None.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Misc">
            <summary>Misc.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Terrain">
            <summary>Terrain.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Ruins">
            <summary>Ruins.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Castle">
            <summary>Castle.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_CityA">
            <summary>CityA.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_CityB">
            <summary>CityB.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_CityWalls">
            <summary>CityWalls.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Farm">
            <summary>Farm.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Fences">
            <summary>Fences.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_MagesGuild">
            <summary>MagesGuild.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Manor">
            <summary>Manor.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_MerchantHomes">
            <summary>MerchantHomes.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_TavernExteriors">
            <summary>TavernExteriors.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_TempleExteriors">
            <summary>TempleExteriors.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Village">
            <summary>Village.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Exterior_Roofs">
            <summary>Roofs.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_PalaceInt">
            <summary>PalaceInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_CityInt">
            <summary>CityInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_CryptA">
            <summary>CryptA.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_CryptB">
            <summary>CryptB.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_DungeonsA">
            <summary>DungeonsA.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_DungeonsB">
            <summary>DungeonsB.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_DungeonsC">
            <summary>DungeonsC.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_DungeonsNEWCs">
            <summary>DungeonsNEWCs.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_FarmInt">
            <summary>FarmInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_MagesGuildInt">
            <summary>MagesGuildInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_ManorInt">
            <summary>ManorInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_MarbleFloors">
            <summary>MarbleFloors.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_MerchantHomesInt">
            <summary>MerchantHomesInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_Mines">
            <summary>Mines.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_Caves">
            <summary>Caves.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_Paintings">
            <summary>Paintings.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_TavernInt">
            <summary>TavernInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_TempleInt">
            <summary>TempleInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_VillageInt">
            <summary>VillageInt.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_Sewer">
            <summary>Sewer.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateTextureSet.Interior_Doors">
            <summary>Doors.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.ClimateWeather">
            <summary>
            Weather variations of climate sets.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateWeather.Normal">
            <summary>Dry summer weather. Use with any climate set.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateWeather.Winter">
            <summary>Buildings and ground in winter (only valid with exterior climate sets).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateWeather.Rain">
            <summary>Ground wet from rain (only valid with ClimateSet.Terrain).</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.ClimateSettings">
            <summary>
            Contains settings for various climate data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateSettings.WorldClimate">
            <summary>World climate value from CLIMATE.PAK. Ranges from 223-232.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateSettings.ClimateType">
            <summary>Base climate type.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateSettings.GroundArchive">
            <summary>Texture archive index for ground plane.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateSettings.SceneryArchive">
            <summary>Texture archive index for ground scenery (rocks, trees, etc.).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ClimateSettings.SkyArchive">
            <summary>Texture archive index for sky background.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.LocationRecordElement">
            <summary>
            Initial data common to both dungeons and exterior locations.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElement.DoorCount">
            <summary>Number of doors in this location.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElement.Doors">
            <summary>Door data array with DoorCount members.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElement.Header">
            <summary>Header for location data.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.LocationDoorElement">
            <summary>
            Describes a door element.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDoorElement.BuildingDataIndex">
            <summary>Index to element within LocationExterior.BuildingData array.
             Or 0xffff when door is not associated with BuildingData array.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDoorElement.NullValue">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDoorElement.Mask">
            <summary>Unknown mask;</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDoorElement.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDoorElement.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.LocationRecordElementHeader">
            <summary>
            Header used for each location record element.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.AlwaysOne1">
            <summary>Always 1.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.NullValue1">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.NullValue2">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.X">
            <summary>X coordinate for location in world units.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.NullValue3">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.Y">
            <summary>X coordinate for location in world units.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.IsExterior">
            <summary>Set to 0x0000 for dungeon interior data, or 0x8000 for location exterior data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.NullValue4">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.AlwaysOne2">
            <summary>Always 1.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.LocationId">
            <summary>LocationID used by the quest subsystem.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.NullValue5">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.IsInterior">
            <summary>Set to 0x0000 for exterior data, or 0x0001 for interior data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.ExteriorLocationId">
            <summary>Set to 0x0000 when no exterior data present, or ID of exterior location</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.NullValue6">
            <summary>Array of 26 0-value bytes.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.LocationName">
            <summary>Name of location used when entering it.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationRecordElementHeader.Unknown3">
            <summary>Array of 9 unknown bytes.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.LocationExterior">
            <summary>
            Describes exterior location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationExterior.RecordElement">
            <summary>Each location is described by a LocationRecordElement.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationExterior.BuildingCount">
            <summary>The number of building structures present.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationExterior.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationExterior.Buildings">
            <summary>Data associated with each building.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationExterior.ExteriorData">
            <summary>Exterior map data including layout information.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.BuildingData">
            <summary>
            Data relating to a building.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.NameSeed">
            <summary>Used to generate building name.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.NullValue1">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.NullValue2">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.FactionId">
            <summary>FactionId associated with building, or 0 if no faction.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.Sector">
            <summary>Generally increases with each building. Otherwise unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.LocationId">
            <summary>Should always be the same as LocationRecordElementHeader.LocationId.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.BuildingType">
            <summary>Type of building.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.BuildingData.Quality">
            <summary>Specifies quality of building from 1-20.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.ExteriorData">
            <summary>
            Layout data for exterior location.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.AnotherName">
            <summary>Another name for this location. Changing seems to have no effect in game.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.MapId">
            <summary>This (value and 0x000fffff) matches (MapTable.MapId and 0x000fffff).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.LocationId">
            <summary>Location ID.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.Width">
            <summary>Width of exterior map grid from 1-8.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.Height">
            <summary>Height of exterior map grid from 1-8.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.BlockIndex">
            <summary>Only first Width*Height elements will have any meaning.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.BlockNumber">
            <summary>Only first Width*Height elements will have any meaning.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.BlockCharacter">
            <summary>Only first Width*Height elements will have any meaning.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.NullValue1">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.NullValue2">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.Unknown4">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.NullValue3">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.ExteriorData.Unknown5">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.LocationDungeon">
            <summary>
            Describes a dungeon map.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDungeon.RecordElement">
            <summary>Each dungeon is described by a LocationRecordElement.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDungeon.Header">
            <summary>Header for dungeon layout.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.LocationDungeon.Blocks">
            <summary>Layout of dungeon.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.DungeonHeader">
            <summary>
            Header preceding dungeon layout elements.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonHeader.NullValue1">
            <summary>Always 0.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonHeader.Unknown1">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonHeader.Unknown2">
            <summary>Unknown.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonHeader.BlockCount">
            <summary>Count of DungeonBlock elements.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonHeader.Unknown3">
            <summary>Unknown.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFLocation.DungeonBlock">
            <summary>
            Describes a dungeon block element in a dungeon map layout.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.X">
            <summary>X position of block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.Z">
            <summary>Y position of block.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.BlockNumberStartIndexBitfield">
            <summary>Bitfield containing BlockNumber, start bit, and BlockIndex.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.BlockNumber">
            <summary>BlockNumber read from bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.IsStartingBlock">
            <summary>IsStartingBlock read from bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.BlockIndex">
            <summary>BlockIndex read from bitfield.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFLocation.DungeonBlock.BlockName">
            <summary>Name of RDB block.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBitmap">
            <summary>
            Stores raw bitmap data. The binary format of the image data will depend on the method which returned the DFBitmap object.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Format">
            <summary>Format of the image.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Width">
            <summary>Width of the image in pixels.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Height">
            <summary>Height of the image in pixels.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Stride">
            <summary>Stride (bytes per horizontal row) of the image.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Data">
            <summary>Image byte array in specified format.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFBitmap.Formats">
            <summary>
            Bitmap formats enumeration.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Formats.Indexed">
            <summary>Indexed image. 1 byte per pixel. Each byte is an index into the palette colour data.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Formats.ARGB">
            <summary>Colour channels in order alpha, red, green, blue. 4 bytes per pixel.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Formats.RGBA">
            <summary>Colour channels in order red, green, blue, alpha. 4 bytes per pixel.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Formats.ABGR">
            <summary>Colour channels in order alpha, blue, green, red. 4 bytes per pixel.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFBitmap.Formats.BGRA">
            <summary>Colour channels in order blue, green, red, alpha. 4 bytes per pixel.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFMesh">
            <summary>
            Stores decomposed mesh data. A mesh is made up of one or more submeshes (DFSubMesh). Each submesh has a unique texture.
             All faces sharing a texture have been grouped into the appropriate submesh. Each submesh contains one
             or more planes (DFPlane). A plane is a collection of points (DFPoint) in a fan radiating from point 0.
             Planes with 3 points can be written as triangles to your 3D engine, however planes with 4 or more points must be
             written based on your needs. For example, if you wanted to write a triangle list then write the first triangle from
             the first three points (indices 0, 1, 2), then increment the second two point indices (0, 2, 3, then 0, 3, 4, and so on)
             until all points have been read. This structure has been chosen as a half-way point between native Daggerfall formats
             and modern 3D engines. How the data is used will depend on the engine chosen for visualisation.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.ObjectId">
            <summary>Object ID of the mesh. This ID is referenced by higher level structures such as blocks.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.TotalVertices">
            <summary>Total number of vertices across all submeshes. Helpful for allocating vertex buffers.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.TotalTriangles">
            <summary>Total number of triangles across all subeshes. Helpful for allocating index buffers.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.SubMeshes">
            <summary>Submesh array. Each submesh contains DFPlane structures grouped by texture.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFMesh.UVGenerationMethods">
            <summary>
            These are methods by which the UV coordinates are generated. This is for troubleshooting only and can be ignored.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.UVGenerationMethods.Unknown">
            <summary>An unknown method.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.UVGenerationMethods.TriangleOnly">
            <summary>Face has three points only.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.UVGenerationMethods.ModifedMatrixGenerator">
            <summary>Using FaceUVTool matrix generator.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFMesh.DFSubMesh">
            <summary>
            Stores mesh submesh data. Each submesh has a unique texture.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFSubMesh.TextureArchive">
            <summary>Texture archive index. Used to determine which texture file to load (e.g. TEXTURE.210).</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFSubMesh.TextureRecord">
            <summary>Texture record index. Used to determine which texture record (index) to load from archive.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFSubMesh.TotalTriangles">
            <summary>Total number of triangles in this submesh. Helpful for allocating index buffers.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFSubMesh.Planes">
            <summary>Array of faces sharing the same texture.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFMesh.DFPlane">
            <summary>
            Stores plane data. The point array is stored in a left-handed counter-clockwise fashion.
             Adjust winding and invert based on your destination engine. Planes are grouped under a submesh
             based on their texture. Each plane is a triangle fan.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPlane.Points">
            <summary>Array of vertices.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPlane.UVGenerationMethod">
            <summary>The UV generation method used for this plane. This is for troubleshooting only and can be ignored.</summary>
        </member>
        <member name="T:DaggerfallConnect.DFMesh.DFPoint">
            <summary>
            Describes a single vertex. Normals and texture coordinates have been read from native mesh format.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.X">
            <summary>X position.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.Y">
            <summary>Y position.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.Z">
            <summary>Z position.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.NX">
            <summary>X component of normal.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.NY">
            <summary>Y component of normal.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.NZ">
            <summary>Z component of normal.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.U">
            <summary>U coordinate of texture.</summary>
        </member>
        <member name="F:DaggerfallConnect.DFMesh.DFPoint.V">
            <summary>V coordinate of texture.</summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile">
            <summary>
            Connects to a TEXTURE.??? file to enumerate and extract image data.
             Each texture file may contain one or more images, including animated records with multiple frames.
             Textures will only be converted from the source binary file when needed. This allows you to extract
             individual records and frames without the overhead of converting unwanted images.
             Combine this with a texture caching scheme when loading large 3D scenes to avoid unnecessary load time.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.TextureFile.SolidSize">
            <summary>
            Width and height of solid images.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.TextureFile.SolidType">
            <summary>
            Type of solid image.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.TextureFile.Header">
            <summary>
            File header.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.TextureFile.RecordHeaders">
            <summary>
            Record header array
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.TextureFile.Records">
            <summary>
            Record array.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to TEXTURE.* file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.#ctor(System.String,DaggerfallConnect.FileUsage,DaggerfallConnect.DFPalette,System.Boolean)">
            <summary>
            Load constructor with palette assignment.
            </summary>
            <param name="FilePath">Absolute path to TEXTURE.* file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="Palette">Palette to use when building images.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.String,System.Boolean)">
            <summary>
            Load constructor that also loads a palette.
            </summary>
            <param name="FilePath">Absolute path to TEXTURE.* file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="PaletteFilePath">Absolute path to Daggerfall palette file.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.IsFilenameSupported(System.String)">
            <summary>
            Tests if a filename is supported.
            </summary>
            <param name="Filename">Name of TEXTURE.* file.</param>
            <returns>True if supported, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Loads a texture file.
            </summary>
            <param name="FilePath">Absolute path to TEXTURE.* file</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetFrameCount(System.Int32)">
            <summary>
            Gets number of frames in specified record.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Number of frames.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetSize(System.Int32)">
            <summary>
            Gets width and height of specified record. All frames of this record are the same dimensions.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetScale(System.Int32)">
            <summary>
            Get the width and height scale to apply to image in scene. These values are divided by 256
             to obtain a value between -1.0 - 0.0, and presumably 0.0 - 1.0. This is the scale of pixels
             for enlarging or shrinking the image.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Scale values for X and Y in Size object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetWidth(System.Int32)">
            <summary>
            Gets width of this image.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Width of image in pixels.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetHeight(System.Int32)">
            <summary>
            Gets the height of this image.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>Height of image in pixels.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetDFBitmap(System.Int32,System.Int32)">
            <summary>
            Gets bitmap data as indexed 8-bit byte array for specified record and frame.
            </summary>
            <param name="Record">Index of record.</param>
            <param name="Frame">Index of frame.</param>
            <returns>DFBitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetManagedBitmap(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets managed bitmap from specified record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <param name="IndexedColour">True to maintain idexed colour, false to return RGB bitmap.</param>
            <param name="MakeTransparent">True to make colour 0x000000 transparent, otherwise false.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.GetPreview(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Get a preview of the file. As many images as possible will be laid out onto the preview surface.
            </summary>
            <param name="Width">Width of preview surface.</param>
            <param name="Height">Height of preview surface.</param>
            <param name="Background">Colour of background.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.IndexToFileName(System.Int32)">
            <summary>
            Returns a TEXTURE.nnn filename based on index.
             This is needed when loading textures for 3D objects that reference textures by index rather than filename.
             If the index is not valid, the returned filename will also be invalid.
            </summary>
            <param name="ArchiveIndex">Index of texture archive.</param>
            <returns>Texture filename in the format TEXTURE.nnn.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.QuickSize(System.String,System.Int32)">
            <summary>
            Gets size of an unloaded texture quickly with minimum overhead.
             This is useful for mesh loading where the texture dimensions need to be known,
             but you may not need to load the entire texture file at that time.
            </summary>
            <param name="FilePath">Absolute path to TEXTURE.* file</param>
            <param name="Record">Index of record.</param>
            <returns>Size.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.QuickScale(System.String,System.Int32)">
            <summary>
            Gets scale of an unloaded texture quickly with minimum overhead.
             This is useful for flat loading where the texture scale needs to be known,
             but you may not need to load the entire texture file at that time.
            </summary>
            <param name="FilePath">Absolute path to TEXTURE.* file</param>
            <param name="Record">Index of record.</param>
            <returns>Size.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.Read">
            <summary>
            Read file.
            </summary>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadHeader(System.IO.BinaryReader@)">
            <summary>
            Reads file header.
            </summary>
            <param name="Reader">Source reader.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadRecordHeaders(System.IO.BinaryReader@)">
            <summary>
            Reads record headers.
            </summary>
            <param name="Reader">Source reader.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadRecords(System.IO.BinaryReader@)">
            <summary>
            Reads records.
            </summary>
            <param name="Reader">Source reader.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadImageData(System.Int32,System.Int32)">
            <summary>
            Reads image data for specified record and frame.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadSolid(System.Int32)">
            <summary>
            Create a solid image type.
            </summary>
            <param name="Record">Record index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadImage(System.Int32,System.Int32)">
            <summary>
            Read uncompressed record.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.TextureFile.ReadRle(System.Int32,System.Int32)">
            <summary>
            Read a RecordRle record.
            </summary>
            <param name="Record">Record index.</param>
            <param name="Frame">Frame index.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="P:DaggerfallConnect.Arena2.TextureFile.Description">
            <summary>
            Gets description of texture file.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.TextureFile.UnsupportedFilenames">
            <summary>
            Gets unsupported filenames. The three texture filenames returned have no image data or are otherwise invalid.
            </summary>
            <returns>Array of unsupported filenames.</returns>
        </member>
        <member name="P:DaggerfallConnect.Arena2.TextureFile.PaletteName">
            <summary>
            Gets correct palette name for this file (always ART_PAL.COL for texture files).
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.TextureFile.RecordCount">
            <summary>
            Number of image records in this file.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile.SolidTypes">
            <summary>
            Solid types enumeration.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile.RowEncoding">
            <summary>
            Row encoding used for the SpecialFrameHeader of RecordRle archives.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile.FileHeader">
            <summary>
            File header.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile.RecordHeader">
            <summary>
            Record header.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile.Record">
            <summary>
            Record data.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.TextureFile.SpecialRowHeader">
            <summary>
            Used to decode RecordRle archives.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile">
            <summary>
            Connects to ARCH3D.BSA to enumerate and extract 3D mesh data.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.Arch3dFile.RecordIndexLookup">
            <summary>
            Index lookup dictionary.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.Arch3dFile.AutoDiscardValue">
            <summary>
            Auto-discard behaviour enabled or disabled.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.Arch3dFile.LastRecord">
            <summary>
            The last record opened. Used by autoDiscard logic
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.Arch3dFile.BsaFile">
            <summary>
            The BsaFile representing ARCH3D.BSA
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.Arch3dFile.Records">
            <summary>
            Array of decomposed mesh records.
            </summary>
        </member>
        <member name="F:DaggerfallConnect.Arena2.Arch3dFile.FaceUVTool">
            <summary>
            Object for calculating UV values of face points
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.#ctor(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load constructor.
            </summary>
            <param name="FilePath">Absolute path to ARCH3D.BSA file.</param>
            <param name="Usage">Determines if the BSA file will read from disk or memory.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.Load(System.String,DaggerfallConnect.FileUsage,System.Boolean)">
            <summary>
            Load ARCH3D.BSA file.
            </summary>
            <param name="FilePath">Absolute path to ARCH3D.BSA file.</param>
            <param name="Usage">Specify if file will be accessed from disk, or loaded into RAM.</param>
            <param name="ReadOnly">File will be read-only if true, read-write if false.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetRecordIndex(System.UInt32)">
            <summary>
            Gets index of mesh record with specified id. Does not change the currently loaded record.
             Uses a dictionary to map ID to index so this method will be faster on subsequent calls.
            </summary>
            <param name="Id">ID of mesh.</param>
            <returns>Index of found mesh, or -1 if not found.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetRecordId(System.Int32)">
            <summary>
            Gets ID of record from index.
            </summary>
            <param name="Record">Index of record.</param>
            <returns>ID of mesh.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.LoadRecord(System.Int32)">
            <summary>
            Load a mesh record into memory and decompose it for use.
            </summary>
            <param name="Record">Index of record to load.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.DiscardRecord(System.Int32)">
            <summary>
            Discard a mesh record from memory.
            </summary>
            <param name="Record">Index of record to discard.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.DiscardAllRecords">
            <summary>
            Discard all mesh records.
            </summary>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetPreview(System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Single)">
            <summary>
            Obtain a new preview rendering of a mesh. Uses GDI+ to draw wireframe representation on native mesh data.
            Mesh is automatically scaled and positioned as best possible to fill thumbail area.
            </summary>
            <param name="Record">Index of record to load.</param>
            <param name="Background">Colour of background field.</param>
            <param name="Wires">Colour of wires used to draw mesh into thumbnail.</param>
            <param name="Width">Width of thumbnail image.</param>
            <param name="Height">Height of thumbnail image.</param>
            <param name="Antialias">True to antialias wires.</param>
            <param name="RotateY">Amount to rotate around Y axis in degrees.</param>
            <returns>A new System.Drawing.Image.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetPreview(System.Int32,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Single)">
            <summary>
            Obtain a new preview rendering of a mesh. Uses GDI+ to draw wireframe representation on native mesh data.
            Mesh is automatically scaled and positioned as best possible to fill thumbail area.
            </summary>
            <param name="Record">Index of record to load.</param>
            <param name="Image">Existing image to update.</param>
            <param name="Background">Colour of background field.</param>
            <param name="Wires">Colour of wires used to draw mesh into thumbnail.</param>
            <param name="Antialias">True to antialias wires.</param>
            <param name="RotateY">Amount to rotate around Y axis in degrees.</param>
            <returns>A new System.Drawing.Image.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.Benchmark">
            <summary>
            Benchmark mesh decomposition time. Forces on auto-discard behaviour and discards all existing records before starting.
            </summary>
            <returns>Time to decompose Count meshes in milliseconds.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetMesh(System.Int32)">
            <summary>
            Get a DFMesh representation of a record.
            </summary>
            <param name="Record">Index of record to load.</param>
            <returns>DFMesh object.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.Get2dPoint(DaggerfallConnect.Utility.FaceUVTool.DFPurePoint,Vector3,Vector3,System.Int32,System.Int32,System.Single)">
            <summary>
            Convert a 3d point to a 2d point for GetPreview() methods.
            </summary>
            <param name="Point">Source 3D point.</param>
            <param name="Min">Minimum vector positions (used to centre render in viewport).</param>
            <param name="Max">Maximum vector positions (used to centre render in viewport).</param>
            <param name="ViewWidth">Width of viewport.</param>
            <param name="ViewHeight">Height of viewport.</param>
            <param name="RotateY">Amount to rotate around Y axis in degrees.</param>
            <returns>2D point for plotting in viewport</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetVersion(System.String)">
            <summary>
            Convert a string to member of meshVersions enumeration.
            </summary>
            <param name="Version">Version of mesh as string</param>
            <returns>Member of meshVersions enumeration</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.Read(System.Int32)">
            <summary>
            Read and decompose a mesh record.
            </summary>
            <param name="Record">The record index to read.</param>
            <returns>True if successful, otherwise false</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.ReadHeader(System.IO.BinaryReader,System.Int32)">
            <summary>
            Read ARCH3D.BSA file header.
            </summary>
            <param name="Reader">A binary reader to file.</param>
            <param name="Record">Destination record index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.ReadMesh(System.Int32)">
            <summary>
            Read mesh data to record array.
            </summary>
            <param name="Record">Destination record index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.DecomposeMesh(System.Int32)">
            <summary>
            Decompose pure mesh into submeshes grouped by texture and containing a triangle-friendly point strip per plane.
            </summary>
            <param name="Record">Destination record index.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.WritePlane(System.Int32,DaggerfallConnect.Arena2.Arch3dFile.PurePlane@)">
            <summary>
            Write points of a plane.
            </summary>
            <param name="SubMeshIndex">Index of the submesh (texture group) to work with.</param>
            <param name="PlaneIn">Source plane.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.WriteVariablePlane(System.Int32,DaggerfallConnect.Arena2.Arch3dFile.PurePlane@)">
            <summary>
            Write a N-point triangle fan to buffer by finding corners.
            </summary>
            <param name="SubMeshIndex">Index of the submesh (texture group) to work with.</param>
            <param name="PlaneIn">Source plane.</param>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.WritePoint(DaggerfallConnect.Utility.FaceUVTool.DFPurePoint@,DaggerfallConnect.Arena2.Arch3dFile.DFPlaneBuffer@)">
            <summary>
            Write a single point to buffer.
            </summary>
            <param name="SrcPoint">Source point.</param>
            <param name="DstPlane">Destination plane buffer.</param>
            <implementation>
            Vector coordinates are divided by 256.0f, and texture coordinates by 16.0f.
            </implementation>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetSubMesh(DaggerfallConnect.Arena2.Arch3dFile.PureMesh@,System.Int32,System.Int32)">
            <summary>
            Find submesh this archive/record combo will belong.
            </summary>
            <param name="Mesh">Source mesh to search.</param>
            <param name="TextureArchive">Texture archive value to match.</param>
            <param name="TextureRecord">Texture index value to match.</param>
            <returns>Index of submesh matching this texture.</returns>
        </member>
        <member name="M:DaggerfallConnect.Arena2.Arch3dFile.GetCornerPoints(DaggerfallConnect.Utility.FaceUVTool.DFPurePoint[]@)">
            <summary>
            Find corner points from a pure face - this reduces the number of points in the final strip.
            </summary>
            <param name="PointsIn">Source points to find corners of.</param>
            <returns>Number of corners found in this point array.</returns>
        </member>
        <member name="P:DaggerfallConnect.Arena2.Arch3dFile.MeshRecords">
            <summary>
            Gets mesh record array.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.Arch3dFile.AutoDiscard">
            <summary>
            If true then decomposed mesh records will be destroyed every time a different record is fetched.
             If false then decomposed mesh records will be maintained until discardRecord() or discardAllRecords() is called.
             Turning off auto-discard will speed up mesh retrieval times at the expense of RAM. For best results, disable
             auto-discard and impose your own caching scheme using LoadRecord() and DiscardRecord() based on your application's
             needs.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.Arch3dFile.Count">
            <summary>
            Number of BSA records in ARCH3D.BSA.
            </summary>
        </member>
        <member name="P:DaggerfallConnect.Arena2.Arch3dFile.Filename">
            <summary>
            Gets default ARCH3D.BSA filename.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.MeshVersions">
            <summary>
            Possible mesh versions enumeration.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.FileHeader">
            <summary>
            Represents ARCH3D.BSA file header.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.MeshRecord">
            <summary>
            A single mesh record.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.PlaneHeader">
            <summary>
            Native plane (face) header.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.TextureIndex">
            <summary>
            A texture index.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.PureMesh">
            <summary>
            Native mesh.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.PurePlane">
            <summary>
            A single native plane (face).
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.DFSubMeshBuffer">
            <summary>
            A submesh. All planes of this submesh are grouped by unique texture index.
            </summary>
        </member>
        <member name="T:DaggerfallConnect.Arena2.Arch3dFile.DFPlaneBuffer">
            <summary>
            Buffer for storing plane data during decomposition.
            </summary>
        </member>
    </members>
</doc>
